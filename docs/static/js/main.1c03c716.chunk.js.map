{"version":3,"sources":["components/ScreenshotStore.tsx","components/Uploader.tsx","components/CamanCanvas.tsx","components/OcrRow.tsx","logic/ocr.ts","hooks.tsx","logic/clusters.ts","logic/bestCluster.ts","components/ProcessedCluster.tsx","components/ProcessedTime.tsx","components/ProcessedDestination.tsx","components/ProcessedRemainingTime.tsx","components/PortalSize.tsx","components/PortalPopup.tsx","components/ProcessedScreenshot.tsx","components/ProcessedScreenshotList.tsx","components/DataBox.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultValue","screenshots","addScreenshots","setScreenshots","data","updateData","id","field","value","setData","ScreenshotStoreContext","React","createContext","ScreenshotStore","props","children","useState","useCallback","screenshot","current","dotProp","set","Provider","Uploader","useContext","maxFileSize","Infinity","filesLimit","acceptedFiles","onChange","files","map","f","uuid","image","dropzoneText","isClose","x","target","tolerance","_","i","Math","abs","reduce","a","c","Caman","window","Plugin","register","ctx","this","canvas","getContext","Error","imageDataColumn","getImageData","streak","offset","top","y","color","Array","from","slice","imageDataRow","left","console","log","crop","Filter","processPlugin","arguments","colors","process","rgba","r","g","b","some","Boolean","CamanCanvas","imageUrl","camanCallback","canvasRef","useRef","useEffect","call","ref","OcrRow","parsed","postProcess","ScreenshotContext","TableRow","TableCell","Input","e","scheduler","createScheduler","init","Promise","all","fill","worker","createWorker","logger","load","loadLanguage","initialize","addWorker","ocr","progressCallback","addJob","text","useCaman","processingCallback","setParsed","progress","setProgress","self","render","toBlob","blob","URL","createObjectURL","result","bestCluster","raw","findBestMatch","clusters","bestMatch","ProcessedCluster","greyscale","threshold","res","replace","match","ProcessedTime","ProcessedDestination","invert","toLowerCase","length","substr","ProcessedRemainingTime","PortalSize","imageData","RadioGroup","row","FormControlLabel","control","Radio","label","PortalPopup","popupObjectUrl","setPopupObjectUrl","cropPortalPopup","ProcessedScreenshot","Table","TableHead","TableBody","ProcessedScreenshotList","Typography","variant","List","ss","ListItem","key","DataBox","reshaped","Object","values","csv","Papa","unparse","columns","TextField","multiline","fullWidth","App","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iTAGMA,EAAe,CACnBC,YAAa,GACbC,eAAgB,SAACD,KACjBE,eAAgB,SAACF,KACjBG,KAAM,GACNC,WAAY,SAACC,EAAYC,EAAeC,KACxCC,QAAS,SAACL,MAECM,EAAyBC,IAAMC,cAAcZ,GA0B3Ca,EAxBmB,SAACC,GAAW,IACpCC,EAAaD,EAAbC,SADmC,EAELC,mBAAShB,EAAaC,aAFjB,mBAEpCA,EAFoC,KAEvBE,EAFuB,KAGrCD,EAAiBe,uBAAY,SAACC,GAClCf,GAAe,SAACgB,GAAD,4BAAiBA,GAAjB,YAA6BD,SAC3C,IALwC,EAMnBF,mBAA8B,IANX,mBAMpCZ,EANoC,KAM9BK,EAN8B,KAOrCJ,EAAaY,uBACjB,SAACX,EAAYC,EAAeC,GAC1BC,GAAQ,SAACU,GACP,OAAOC,IAAQC,IAAIF,EAAS,CAACb,EAAIC,GAAQC,QAG7C,CAACC,IAEH,OACE,kBAACC,EAAuBY,SAAxB,CACEd,MAAO,CAAEP,cAAaC,iBAAgBC,iBAAgBC,OAAMC,aAAYI,YAEvEM,I,kBCXQQ,EAhBY,SAACT,GAAW,IAAD,EACAU,qBAAWd,GAAvCP,EAD4B,EAC5BA,eAAgBM,EADY,EACZA,QACxB,OACE,kBAAC,IAAD,CACEgB,YAAaC,IACbC,WAAYD,IACZE,cAAe,CAAC,WAChBC,SAAU,SAACC,GACT3B,EAAe2B,EAAMC,KAAI,SAACC,GAAD,MAAQ,CAAE1B,GAAI2B,eAAQC,MAAOF,OACtDvB,EAAQ,KAEV0B,aAAa,sE,2BCdbC,EAAU,SAACC,EAAaC,GAA6C,IAA3BC,EAA0B,uDAAN,EAClE,OACEF,EAAEN,KAAI,SAACS,EAAGC,GAAJ,OAAUC,KAAKC,IAAIN,EAAEI,GAAKH,EAAOG,OAAKG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IACpEP,GAIEQ,EAASC,OAAeD,MAE9BA,EAAME,OAAOC,SAAS,mBAAmB,WACvC,IACMC,EAD4BC,KAAKC,OACpBC,WAAW,MAC9B,IAAKH,EACH,MAAMI,MAAM,mBASd,IANA,IACMC,EAAkBL,EAAIM,aADZ,KACkC,IAAK,EAAG,KAEtDC,EAAS,EACTC,EAAS,EACTC,EAAM,EACDC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5BF,EAAa,EAAJE,EACT,IAAMC,EAAQC,MAAMC,KAAKR,EAAgBpD,KAAK6D,MAAMN,EAAQA,EAAS,IAErE,GAAIvB,EAAQ0B,EAAO,CAAC,IAAK,IAAK,MAAQ1B,EAAQ0B,EAAO,CAAC,IAAK,IAAK,MAE9D,GAAe,OADfJ,EACmB,CACjBE,EAAMC,EAAIH,EAAS,EACnB,YAGFA,EAAS,EAIb,IAAMQ,EAAef,EAAIM,aAAa,KAAM,IAAMG,EAAK,IAAK,GAE5DF,EAAS,EACTC,EAAS,EAET,IADA,IAAIQ,EAAO,EACF9B,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5BsB,EAAa,EAAJtB,EACT,IAAMyB,EAAQC,MAAMC,KAAKE,EAAa9D,KAAK6D,MAAMN,EAAQA,EAAS,IAClE,GAAIvB,EAAQ0B,EAAO,CAAC,IAAK,IAAK,MAAQ1B,EAAQ0B,EAAO,CAAC,IAAK,IAAK,MAE9D,GAAe,OADfJ,EACmB,CACjBU,QAAQC,IAAI,UACZF,EAAO9B,EAAIqB,EAAS,EACpB,YAGFA,EAAS,EAIbN,KAAKkB,KAAK,IAAK,IAAK,KAAOH,EAAO,GAAI,IAAMP,EAAM,OAuBpDb,EAAMwB,OAAOrB,SAAS,mBAAmB,WACvCE,KAAKoB,cAAc,kBAAmBC,cAGxC1B,EAAMwB,OAAOrB,SAAS,iBAAiB,SAErCwB,EACAnC,GAEAa,KAAKuB,QAAQ,iBAAiB,SAE5BC,GAQA,IAPC,IACOC,EAAYD,EAAZC,EAAGC,EAASF,EAATE,EAAGC,EAAMH,EAANG,EACRvE,EAAQkE,EACX3C,KAAI,SAAC+B,GAAD,OAAW1B,EAAQ,CAACyC,EAAGC,EAAGC,GAAIjB,EAAOvB,MACzCyC,KAAKC,SACJ,IACA,EACJ,MAAgB,CAAC,IAAK,IAAK,KAA3B,eAAiC,CAC/BL,EADU,MACApE,SAKhB,IAgBe0E,EAbV,SAACpE,GAAW,IACPqE,EAA4BrE,EAA5BqE,SAAUC,EAAkBtE,EAAlBsE,cACZC,EAAYC,iBACf,MAOH,OALAC,qBAAU,WACRxC,EAAMsC,EAAUlE,QAASgE,GAAU,WACjCC,EAAcI,KAAKpC,WAEpB,IACI,4BAAQqC,IAAKJ,K,2BC9EPK,EA7BV,SAAC5E,GAAW,IAEbqE,EAKErE,EALFqE,SACAC,EAIEtE,EAJFsE,cACAO,EAGE7E,EAHF6E,OAJY,EAOV7E,EAFF8E,mBALY,MAKE,SAACvD,GAAD,OAAeA,GALjB,EAMZ9B,EACEO,EADFP,MANY,EAQeiB,qBAAWd,GAAhCN,EARM,EAQNA,KAAMC,EARA,EAQAA,WACRa,EAAaM,qBAAWqE,GAK9B,OAJAN,qBAAU,kBAAMlF,EAAWa,EAAWZ,GAAIC,EAAOqF,EAAYD,MAAU,CACrEC,EACAD,IAGA,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAaZ,SAAUA,EAAUC,cAAeA,KAElD,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACExF,MAAOJ,GAAQA,EAAKc,EAAWZ,KAAOF,EAAKc,EAAWZ,IAAIC,GAC1DsB,SAAU,SAACoE,GAAD,OAAO5F,EAAWa,EAAWZ,GAAIC,EAAO0F,EAAE3D,OAAO9B,a,iCCjC/D0F,EAAYC,4BACZC,EAAOC,QAAQC,IACnBvC,MAAM,GACHwC,KAAK,GACLxE,IAFH,sBAEO,4BAAAc,EAAA,6DACG2D,EAASC,uBAAa,CAAEC,OAAQtC,QAAQC,MAD3C,SAEGmC,EAAOG,OAFV,uBAGGH,EAAOI,aAAa,OAHvB,uBAIGJ,EAAOK,WAAW,OAJrB,OAKHX,EAAUY,UAAUN,GALjB,6CAqBMO,EAZN,uCAAG,WACV5B,EACA6B,GAFU,iBAAAnE,EAAA,sEAIJuD,EAJI,uBAOAF,EAAUe,OAAO,YAAa9B,GAP9B,uBAMA+B,EANA,EAMR9G,KAAQ8G,KAEV9C,QAAQC,IAAI6C,GARF,kBASHA,GATG,2CAAH,wDCZF,SAASC,EAASC,GAAiC,IAAD,EAC3BpG,mBAAS,IADkB,mBAChD2E,EADgD,KACxC0B,EADwC,OAEvBrG,mBAAS,GAFc,mBAEhDsG,EAFgD,KAEtCC,EAFsC,KAevD,MAAO,CAAE5B,SAAQ2B,WAAUlC,cAZL,WACpBgC,EAAmB5B,KAAKpC,MACxB,IAAMoE,EAAOpE,KACbA,KAAKqE,QAAO,WACwBD,EAAKnE,OAChCqE,OAAP,uCAAc,WAAOC,GAAP,iBAAA9E,EAAA,6DACNsC,EAAWyC,IAAIC,gBAAgBF,GADzB,SAESZ,EAAI5B,EAAUoC,GAFvB,OAENO,EAFM,OAGZT,EAAUS,GAHE,2CAAd,4D,aCXS,GACb,cACA,kBACA,gBACA,gBACA,iBACA,iBACA,aACA,aACA,aACA,aACA,iBACA,aACA,eACA,iBACA,WACA,WACA,cACA,cACA,aACA,eACA,oBACA,SACA,cACA,aACA,cACA,gBACA,YACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,oBACA,iBACA,qBACA,qBACA,WACA,cACA,aACA,YACA,kBACA,aACA,cACA,WACA,YACA,YACA,aACA,WACA,iBACA,gBACA,mBACA,iBACA,gBACA,cACA,WACA,WACA,iBACA,oBACA,cACA,UACA,oBACA,aACA,aACA,iBACA,cACA,aACA,aACA,aACA,gBACA,wBACA,wBACA,gBACA,eACA,aACA,mBACA,mBACA,gBACA,UACA,WACA,gBACA,gBACA,eACA,iBACA,aACA,gBACA,WACA,gBACA,eACA,iBACA,WACA,mBACA,WACA,UACA,UACA,qBACA,qBACA,cACA,YACA,aACA,YACA,iBACA,eACA,WACA,gBACA,eACA,WACA,oBACA,cACA,mBACA,kBACA,mBACA,oBACA,qBACA,mBACA,oBACA,iBACA,sBACA,sBACA,iBACA,oBACA,oBACA,qBACA,iBACA,sBACA,sBACA,WACA,eACA,sBACA,iBACA,oBACA,sBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,gBACA,sBACA,cACA,eACA,eACA,aACA,eACA,YACA,sBACA,gBACA,qBACA,iBACA,sBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,kBACA,mBACA,iBACA,qBACA,SACA,qBACA,SACA,YACA,wBACA,mBACA,kBACA,mBACA,kBACA,sBACA,qBACA,mBACA,kBACA,wBACA,uBACA,iBACA,iBACA,gBACA,gBACA,qBACA,aACA,gBACA,sBACA,eACA,eACA,eACA,mBACA,mBACA,mBACA,uBACA,mBACA,uBACA,cACA,iBACA,sBACA,oBACA,yBACA,oBACA,oBACA,oBACA,sBACA,eACA,iBACA,kBACA,gBACA,0BACA,OACA,0BACA,mBACA,kBACA,aACA,UACA,sBACA,cACA,UACA,UACA,oBACA,oBACA,oBACA,gBACA,yBACA,yBACA,wBACA,mBACA,kBACA,kBACA,iBACA,oBACA,gBACA,oBACA,kBACA,oBACA,gBACA,qBACA,mBACA,iBACA,kBACA,mBACA,qBACA,mBACA,gBACA,qBACA,oBACA,kBACA,iBACA,kBACA,sBACA,mBACA,mBACA,oBACA,2BACA,mBACA,mBACA,kBACA,qBACA,qBACA,qBACA,oBACA,gBACA,qBACA,oBACA,gBACA,qBACA,qBACA,oBACA,oBACA,iBACA,iBACA,mBACA,mBACA,oBACA,gBACA,qBACA,eACA,iBACA,iBACA,oBACA,qBACA,mBACA,oBACA,mBACA,uBACA,iBACA,iBACA,kBACA,gBACA,qBACA,qBACA,oBACA,gBACA,qBACA,mBACA,mBACA,uBACA,kBACA,sBACA,kBACA,mBACA,qBACA,mBACA,kBACA,oBACA,iBACA,kBACA,mBACA,cACA,gBACA,cACA,gBACA,qBACA,oBACA,oBACA,uBACA,wBACA,uBACA,iBACA,gBACA,gBACA,kBACA,iBACA,mBACA,gBACA,iBACA,kBACA,gBACA,mBACA,sBACA,qBACA,oBACA,oBACA,oBACA,wBACA,wBACA,uBACA,oBACA,iBACA,gBACA,uBACA,mBACA,iBACA,qBACA,eACA,oBACA,iBACA,oBACA,kBACA,mBACA,kBACA,iBACA,oBACA,gBACA,qBACA,oBACA,kBACA,kBACA,iBACA,oBACA,iBACA,kBACA,oBACA,kBACA,kBACA,gBACA,kBACA,sBACA,mBACA,qBACA,iBACA,oBACA,qBACA,mBACA,mBACA,mBACA,qBACA,oBACA,qBACA,oBACA,gBACA,gBACA,gBACA,qBACA,qBACA,qBACA,mBACA,qBACA,kBACA,oBACA,mBACA,qBACA,gBACA,kBACA,kBACA,gBACA,iBACA,gBACA,kBACA,iBACA,uBACA,mBACA,mBACA,oBACA,wBACA,sBACA,sBACA,kBACA,iBACA,oBACA,iBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,qBACA,cACA,sBACA,mBACA,kBACA,gBACA,eACA,gBACA,iBACA,iBACA,iBACA,qBACA,sBACA,kBACA,iBACA,kBACA,gBACA,gBACA,gBACA,qBACA,qBACA,qBACA,qBACA,oBACA,iBACA,gBACA,kBACA,iBACA,mBACA,mBACA,uBACA,iBACA,mBACA,eACA,sBACA,uBACA,oBACA,iBACA,kBACA,uBACA,wBACA,uBACA,mBACA,qBACA,kBACA,kBACA,mBACA,iBACA,iBACA,eACA,qBACA,mBACA,kBACA,mBACA,iBACA,oBACA,kBACA,gBACA,mBACA,wBACA,yBACA,yBACA,kBACA,mBACA,kBACA,iBACA,sBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,qBACA,qBACA,gBACA,eACA,iBACA,gBACA,qBACA,mBACA,oBACA,mBACA,sBACA,sBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,oBACA,iBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,gBACA,qBACA,qBACA,gBACA,qBACA,oBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,gBACA,qBACA,qBACA,oBACA,oBACA,qBACA,kBACA,mBACA,qBACA,oBACA,qBACA,oBACA,iBACA,gBACA,oBACA,mBACA,qBACA,sBACA,iBACA,uBACA,mBACA,mBACA,kBACA,iBACA,mBACA,iBACA,mBACA,mBACA,iBACA,oBACA,mBACA,eACA,oBACA,oBACA,kBACA,oBACA,mBACA,mBACA,mBACA,kBACA,wBACA,qBACA,mBACA,iBACA,iBACA,qBACA,qBACA,oBACA,kBACA,kBACA,iBACA,oBACA,uBACA,qBACA,qBACA,kBACA,mBACA,kBACA,kBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,gBACA,gBACA,gBACA,qBACA,qBACA,qBACA,kBACA,gBACA,eACA,qBACA,mBACA,oBACA,iBACA,cACA,oBACA,qBACA,kBACA,mBACA,qBACA,gBACA,qBACA,gBACA,iBACA,kBACA,gBACA,qBACA,iBACA,oBACA,oBACA,qBACA,iBACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,kBACA,qBACA,oBACA,oBACA,oBACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,iBACA,WACA,gBACA,qBACA,oBACA,qBACA,oBACA,gBACA,qBACA,oBACA,qBACA,oBACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,iBACA,iBACA,iBACA,iBACA,iBACA,SACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,WACA,WACA,WACA,WACA,gBACA,eACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,eACA,kBACA,gBACA,mBACA,gBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,mBACA,gBACA,mBACA,eACA,kBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,gBACA,mBACA,gBACA,mBACA,mBACA,mBACA,gBACA,mBACA,gBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,eACA,kBACA,mBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,gBACA,mBACA,gBACA,mBACA,eACA,kBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,wBACA,wBACA,cACA,cACA,cACA,cACA,cACA,cACA,0BACA,0BACA,0BACA,0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","file":"static/js/main.1c03c716.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport dotProp from \"dot-prop-immutable\";\n\nconst defaultValue = {\n  screenshots: [] as any[],\n  addScreenshots: (screenshots: any[]) => {},\n  setScreenshots: (screenshots: any[]) => {},\n  data: {} as Record<string, any>,\n  updateData: (id: string, field: string, value: string) => {},\n  setData: (data: Record<string, any>) => {}\n};\nexport const ScreenshotStoreContext = React.createContext(defaultValue);\n\nconst ScreenshotStore: React.FC = (props) => {\n  const { children } = props;\n  const [screenshots, setScreenshots] = useState(defaultValue.screenshots);\n  const addScreenshots = useCallback((screenshot: any[]) => {\n    setScreenshots((current) => [...current, ...screenshot]);\n  }, []);\n  const [data, setData] = useState<Record<string, any>>({});\n  const updateData = useCallback(\n    (id: string, field: string, value: string) => {\n      setData((current) => {\n        return dotProp.set(current, [id, field], value);\n      });\n    },\n    [setData]\n  );\n  return (\n    <ScreenshotStoreContext.Provider\n      value={{ screenshots, addScreenshots, setScreenshots, data, updateData, setData }}\n    >\n      {children}\n    </ScreenshotStoreContext.Provider>\n  );\n};\n\nexport default ScreenshotStore;\n","import React, { useContext } from \"react\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { v4 as uuid } from \"uuid\";\n\nconst Uploader: React.FC = (props) => {\n  const { setScreenshots, setData } = useContext(ScreenshotStoreContext);\n  return (\n    <DropzoneArea\n      maxFileSize={Infinity}\n      filesLimit={Infinity}\n      acceptedFiles={[\"image/*\"]}\n      onChange={(files) => {\n        setScreenshots(files.map((f) => ({ id: uuid(), image: f })));\n        setData({});\n      }}\n      dropzoneText=\"Drag and drop your screenshots here (1920x1080 and English only)\"\n    />\n  );\n};\n\nexport default Uploader;\n","import React, { useEffect, useRef } from \"react\";\n\nconst isClose = (x: number[], target: number[], tolerance: number = 5) => {\n  return (\n    x.map((_, i) => Math.abs(x[i] - target[i])).reduce((a, c) => a + c, 0) <=\n    tolerance\n  );\n};\n\nconst Caman = (window as any).Caman;\n\nCaman.Plugin.register(\"cropPortalPopup\", function (this: any) {\n  const canvas: HTMLCanvasElement = this.canvas;\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    throw Error(\"Context is null\");\n  }\n  //   const imageData = ctx.getImageData(left, top, width, height);\n  const xColumn = 1578;\n  const imageDataColumn = ctx.getImageData(xColumn, 700, 1, 380);\n\n  let streak = 0;\n  let offset = 0;\n  let top = 0;\n  for (let y = 0; y < 380; y++) {\n    offset = y * 4;\n    const color = Array.from(imageDataColumn.data.slice(offset, offset + 3));\n    // console.log(JSON.stringify(color));\n    if (isClose(color, [255, 178, 18]) || isClose(color, [143, 109, 45])) {\n      streak++;\n      if (streak === 14) {\n        top = y - streak + 1;\n        break;\n      }\n    } else {\n      streak = 0;\n    }\n  }\n\n  const imageDataRow = ctx.getImageData(1450, 700 + top, 470, 1);\n\n  streak = 0;\n  offset = 0;\n  let left = 0;\n  for (let x = 0; x < 470; x++) {\n    offset = x * 4;\n    const color = Array.from(imageDataRow.data.slice(offset, offset + 3));\n    if (isClose(color, [255, 178, 18]) || isClose(color, [144, 110, 46])) {\n      streak++;\n      if (streak === 60) {\n        console.log(\"Streak\");\n        left = x - streak + 1;\n        break;\n      }\n    } else {\n      streak = 0;\n    }\n  }\n\n  this.crop(357, 109, 1450 + left - 16, 700 + top - 59);\n\n  //   const rowCounter = Array(height).fill(0);\n  //   const columnCounter = Array(width).fill(0);\n\n  //   let offset = 0;\n  //   for (let x = 0; x < width; x++) {\n  //     for (let y = 0; y < height; y++) {\n  //       offset = x * y * 4;\n  //       const r = imageData.data[offset];\n  //       const g = imageData.data[offset + 1];\n  //       const b = imageData.data[offset + 2];\n  //       if (\n  //         (r === 255 && g === 178 && b === 18) ||\n  //         (r === 144 && g === 110 && b === 46)\n  //       ) {\n  //         rowCounter[y] += 1;\n  //         columnCounter[x] += 1;\n  //       }\n  //     }\n  //   }\n});\n\nCaman.Filter.register(\"cropPortalPopup\", function (this: any) {\n  this.processPlugin(\"cropPortalPopup\", arguments);\n});\n\nCaman.Filter.register(\"selectByColor\", function (\n  this: any,\n  colors: number[][],\n  tolerance?: number\n) {\n  this.process(\"selectByColor\", function (\n    this: any,\n    rgba: Record<string, number>\n  ) {\n    const { r, g, b } = rgba;\n    const value = colors\n      .map((color) => isClose([r, g, b], color, tolerance))\n      .some(Boolean)\n      ? 255\n      : 0;\n    for (const x of [\"r\", \"g\", \"b\"]) {\n      rgba[x] = value;\n    }\n  });\n});\n\nconst CamanCanvas: React.FC<{\n  imageUrl: string;\n  camanCallback: () => void;\n}> = (props) => {\n  const { imageUrl, camanCallback } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(\n    (null as unknown) as HTMLCanvasElement\n  );\n  useEffect(() => {\n    Caman(canvasRef.current, imageUrl, function (this: any) {\n      camanCallback.call(this);\n    });\n  }, []);\n  return <canvas ref={canvasRef} />;\n};\n\nexport default CamanCanvas;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport CamanCanvas from \"./CamanCanvas\";\nimport { TableRow, TableCell, Input } from \"@material-ui/core\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\nimport { ScreenshotContext } from \"./ProcessedScreenshot\";\n\nconst OcrRow: React.FC<{\n  imageUrl: string;\n  camanCallback: () => void;\n  parsed: string;\n  progress: number;\n  postProcess?: (raw: string) => string;\n  field: string;\n}> = (props) => {\n  const {\n    imageUrl,\n    camanCallback,\n    parsed,\n    postProcess = (x: string) => x,\n    field,\n  } = props;\n  const { data, updateData } = useContext(ScreenshotStoreContext);\n  const screenshot = useContext(ScreenshotContext);\n  useEffect(() => updateData(screenshot.id, field, postProcess(parsed)), [\n    postProcess,\n    parsed,\n  ]);\n  return (\n    <TableRow>\n      <TableCell>\n        <CamanCanvas imageUrl={imageUrl} camanCallback={camanCallback} />\n      </TableCell>\n      <TableCell>\n        <Input\n          value={data && data[screenshot.id] && data[screenshot.id][field]}\n          onChange={(e) => updateData(screenshot.id, field, e.target.value)}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default OcrRow;\n","import { createScheduler, createWorker } from \"tesseract.js\";\n\nconst scheduler = createScheduler();\nconst init = Promise.all(\n  Array(2)\n    .fill(0)\n    .map(async () => {\n      const worker = createWorker({ logger: console.log });\n      await worker.load();\n      await worker.loadLanguage(\"eng\");\n      await worker.initialize(\"eng\");\n      scheduler.addWorker(worker);\n    })\n);\n\nconst ocr = async (\n  imageUrl: string,\n  progressCallback?: (progress: number) => void\n) => {\n  await init;\n  const {\n    data: { text },\n  } = await scheduler.addJob(\"recognize\", imageUrl);\n  console.log(text);\n  return text;\n};\n\nexport default ocr;\n","import { useState } from \"react\";\nimport ocr from \"./logic/ocr\";\n\nexport function useCaman(processingCallback: () => void) {\n  const [parsed, setParsed] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const camanCallback = function (this: any) {\n    processingCallback.call(this);\n    const self = this;\n    this.render(function () {\n      const canvas: HTMLCanvasElement = self.canvas;\n      canvas.toBlob(async (blob) => {\n        const imageUrl = URL.createObjectURL(blob);\n        const result = await ocr(imageUrl, setProgress);\n        setParsed(result);\n      });\n    });\n  };\n  return { parsed, progress, camanCallback };\n}\n","export default [\n  \"Swamp Cross\",\n  \"Tharcal Fissure\",\n  \"Mushroom Cave\",\n  \"Mushroom Cave\",\n  \"Fishy Business\",\n  \"Fishy Business\",\n  \"Stone Wars\",\n  \"Stone Wars\",\n  \"Cairn Darg\",\n  \"Gwan Gorge\",\n  \"Malag Crevasse\",\n  \"Creag Morr\",\n  \"Cairn Camain\",\n  \"Cairn Glascore\",\n  \"Pen Gent\",\n  \"Pen Garn\",\n  \"Crose Gorge\",\n  \"Birken Fell\",\n  \"Eldon Hill\",\n  \"Lewsdon Hill\",\n  \"Blackthorn Quarry\",\n  \"Haytor\",\n  \"Brent Knoll\",\n  \"Mase Knoll\",\n  \"Croker Hill\",\n  \"Goffers Knoll\",\n  \"Vixen Tor\",\n  \"Prospector's Hope\",\n  \"Steelhide Meadow\",\n  \"Longmarch Meadow\",\n  \"Lazygrass Plain\",\n  \"Snapshaft Trough\",\n  \"Drywater Meadow\",\n  \"Parchthroat Plain\",\n  \"Deadvein Gully\",\n  \"Roastcorpse Steppe\",\n  \"Kindlegrass Steppe\",\n  \"Ferndell\",\n  \"Wyre Forest\",\n  \"Stagbourne\",\n  \"Murkweald\",\n  \"Longtimber Glen\",\n  \"Birchcopse\",\n  \"Willow Wood\",\n  \"Oakcopse\",\n  \"Rowanwood\",\n  \"Larchroad\",\n  \"Pen Kerrig\",\n  \"Slimehag\",\n  \"Bonepool Marsh\",\n  \"Spectral Sump\",\n  \"Willowsigh Marsh\",\n  \"Stumprot Swamp\",\n  \"Dusklight Fen\",\n  \"Dewleaf Fen\",\n  \"Stinkhag\",\n  \"Chillhag\",\n  \"Slowtree Plain\",\n  \"Smoothfloor Cleft\",\n  \"Gutras Hill\",\n  \"Mardale\",\n  \"Wispwhisper Marsh\",\n  \"Curlew Fen\",\n  \"Saddle Tor\",\n  \"Windripple Fen\",\n  \"Mawar Gorge\",\n  \"Russerdell\",\n  \"Bryn Gorge\",\n  \"Cairn Gorm\",\n  \"Lumber Lunacy\",\n  \"Preaching to the Dead\",\n  \"Preaching to the Dead\",\n  \"Bowscale Fell\",\n  \"Cairn Fidair\",\n  \"Creag Garr\",\n  \"Nightcreak Marsh\",\n  \"Fractured Ground\",\n  \"Cracked Earth\",\n  \"Redlake\",\n  \"Yew Wood\",\n  \"Highbole Glen\",\n  \"Hornbeam Wood\",\n  \"Steppe Cross\",\n  \"Highland Cross\",\n  \"Haldon Tor\",\n  \"Lumber Lunacy\",\n  \"Martlock\",\n  \"Fort Sterling\",\n  \"Forest Cross\",\n  \"Mountain Cross\",\n  \"Thetford\",\n  \"Sleetwater Basin\",\n  \"Lymhurst\",\n  \"Camlann\",\n  \"Astolat\",\n  \"Curious Excavation\",\n  \"Lurking Underneath\",\n  \"Bridgewatch\",\n  \"Rock Adit\",\n  \"Cougar Den\",\n  \"Rock Adit\",\n  \"Sabertooth Den\",\n  \"Swamp Burrow\",\n  \"Ore Adit\",\n  \"Forest Burrow\",\n  \"The Underway\",\n  \"Caerleon\",\n  \"Royal Wine Cellar\",\n  \"Runnel Sink\",\n  \"Forgotten Vaults\",\n  \"Condemned Vault\",\n  \"Forgotten Vaults\",\n  \"Royal Wine Cellar\",\n  \"Cathedral of Light\",\n  \"Forgotten Vaults\",\n  \"Royal Wine Cellar\",\n  \"Hallowed Crypt\",\n  \"Hallowed Undercrypt\",\n  \"Hallowed Undercrypt\",\n  \"Hallowed Crypt\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Cathedral of Light\",\n  \"Hallowed Crypt\",\n  \"Condemned Sepulcher\",\n  \"Condemned Sepulcher\",\n  \"Inis Mon\",\n  \"Trinity Hall\",\n  \"Hallowed Undercrypt\",\n  \"Hallowed Crypt\",\n  \"Royal Wine Cellar\",\n  \"Hallowed Undercrypt\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Three Sisters\",\n  \"A Fistful of Silver\",\n  \"Lesser Hell\",\n  \"Greater Hell\",\n  \"Greater Hell\",\n  \"Cedarcopse\",\n  \"Bellever Tor\",\n  \"Pen Uchaf\",\n  \"Shiftshadow Expanse\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Hallowed Crypt\",\n  \"Hallowed Undercrypt\",\n  \"Deepwood Enclave\",\n  \"Chambers of Truth\",\n  \"Deepwood Enclave\",\n  \"Deepwood Enclave\",\n  \"Chambers of Truth\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Forgotten Vaults\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Royal Wine Cellar\",\n  \"Caerleon Market\",\n  \"Bank of Caerleon\",\n  \"Eternal Battle\",\n  \"Lurking Underneath\",\n  \"Arena1\",\n  \"Caerleon Realmgate\",\n  \"Arena2\",\n  \"The Arena\",\n  \"Preaching to the Dead\",\n  \"Bank of Thetford\",\n  \"Thetford Market\",\n  \"Bank of Lymhurst\",\n  \"Lymhurst Market\",\n  \"Bank of Bridgewatch\",\n  \"Bridgewatch Market\",\n  \"Bank of Martlock\",\n  \"Martlock Market\",\n  \"Bank of Fort Sterling\",\n  \"Fort Sterling Market\",\n  \"Eternal Battle\",\n  \"Fishy Business\",\n  \"Lumber Lunacy\",\n  \"Mushroom Cave\",\n  \"Lurking Underneath\",\n  \"Stone Wars\",\n  \"Three Sisters\",\n  \"A Fistful Of Silver\",\n  \"Trinity Hall\",\n  \"Trinity Hall\",\n  \"Trinity Hall\",\n  \"LEGACY-KEEPER-01\",\n  \"LEGACY-UNDEAD-01\",\n  \"LEGACY-UNDEAD-02\",\n  \"In the Raven's Claws\",\n  \"Forgotten Vaults\",\n  \"In the Raven's Claws\",\n  \"Lesser Hell\",\n  \"Hallowed Crypt\",\n  \"Hallowed Undercrypt\",\n  \"Farmland Skirmish\",\n  \"HomeTerritory Skirmish\",\n  \"Resource Skirmish\",\n  \"Stoneroot Caverns\",\n  \"Resource Skirmish\",\n  \"Resource Skirmish 2\",\n  \"CrystalRealm\",\n  \"The Lighthouse\",\n  \"Forgotten Woods\",\n  \"Mountain Fort\",\n  \"Conquerors' Hall Lvl. 1\",\n  \"Cove\",\n  \"Conquerors' Hall Lvl. 2\",\n  \"TUT-CASTLECELLAR\",\n  \"Caerleon Market\",\n  \"ARENA-City\",\n  \"HIDEOUT\",\n  \"HALLOWEEN-UNDEAD-01\",\n  \"Hidden Keep\",\n  \"HIDEOUT\",\n  \"HIDEOUT\",\n  \"Northstrand Dunes\",\n  \"Northstrand Beach\",\n  \"Scuttlesink Mouth\",\n  \"Deepwood Dell\",\n  \"Whitebank Portal North\",\n  \"Whitebank Portal South\",\n  \"Whitebank Portal East\",\n  \"Whitebank Stream\",\n  \"Whitebank Shore\",\n  \"Whitebank Cross\",\n  \"Whitebank Wall\",\n  \"Stoneroot Caverns\",\n  \"Meltwater Bog\",\n  \"Whitebank Descent\",\n  \"Whitebank Ridge\",\n  \"Stoneroot Caverns\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Timberslope Dell\",\n  \"Deepwood Pines\",\n  \"Frostpeak Vista\",\n  \"Frostpeak Ascent\",\n  \"Floatshoal Fissure\",\n  \"Floatshoal Bight\",\n  \"Darkseep Core\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Meltwater Delta\",\n  \"Meltwater Sump\",\n  \"Skysand Plateau\",\n  \"Everwinter Crossing\",\n  \"Everwinter Plain\",\n  \"Everwinter Gorge\",\n  \"Scuttlesink Marsh\",\n  \"Brambleshore Hinterlands\",\n  \"Shaleheath Steep\",\n  \"Everwinter Reach\",\n  \"Everwinter Peak\",\n  \"Everwinter Passage\",\n  \"Everwinter Expanse\",\n  \"Everwinter Incline\",\n  \"Stoneslip Passage\",\n  \"Whitecap Cave\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Scuttlesink Pools\",\n  \"Timbertop Dale\",\n  \"Timbertop Wood\",\n  \"Timbertop Escarp\",\n  \"Shaleheath Hills\",\n  \"Everwinter Shores\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Wetgrave Bog\",\n  \"Wetgrave Swale\",\n  \"Wetgrave Marsh\",\n  \"Timberslope Grove\",\n  \"Timberslope Bridge\",\n  \"Swiftsands Plain\",\n  \"Drybasin Riverbed\",\n  \"Swiftsands Basin\",\n  \"Swiftsands Chaparral\",\n  \"Skylake Bridge\",\n  \"Greenshore Bay\",\n  \"Flatrock Cliffs\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Skullmarsh Lower\",\n  \"Skullmarsh Upper\",\n  \"Greenshore Peninsula\",\n  \"Giantweald Dale\",\n  \"Watchwood Precipice\",\n  \"Watchwood Grove\",\n  \"Giantweald Woods\",\n  \"Watchwood Lakeside\",\n  \"Watchwood Bluffs\",\n  \"Giantweald Edge\",\n  \"Slakesands Canyon\",\n  \"Drybasin Oasis\",\n  \"Slakesands Mesa\",\n  \"Flatrock Plateau\",\n  \"Munten Rise\",\n  \"Munten Tundra\",\n  \"Munten Fell\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Hightree Portal East\",\n  \"Hightree Portal North\",\n  \"Hightree Portal West\",\n  \"Hightree Steep\",\n  \"Hightree Lake\",\n  \"Hightree Dale\",\n  \"Hightree Strand\",\n  \"Hightree Glade\",\n  \"Hightree Enclave\",\n  \"Hightree Pass\",\n  \"Hightree Levee\",\n  \"Hightree Cliffs\",\n  \"Hightree Isle\",\n  \"Hightree Hillock\",\n  \"Glacierbreak Summit\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Widemoor Portal North\",\n  \"Widemoor Portal South\",\n  \"Widemoor Portal West\",\n  \"Drownfield Course\",\n  \"Widemoor Shore\",\n  \"Widemoor Pool\",\n  \"Willowshade Wetlands\",\n  \"Widemoor Estuary\",\n  \"Widemoor Hills\",\n  \"Drownfield Wetland\",\n  \"Widemoor End\",\n  \"Willowshade Pools\",\n  \"Widemoor Woods\",\n  \"Willowshade Hills\",\n  \"Timberscar Dell\",\n  \"Timberscar Copse\",\n  \"Drytop Riverbed\",\n  \"Drytop Pillars\",\n  \"Stoneroot Caverns\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Stoneroot Caverns\",\n  \"Stalagmite Adit\",\n  \"Drownfield Mire\",\n  \"Drownfield Fen\",\n  \"Drownfield Slough\",\n  \"Drownfield Rut\",\n  \"Drownfield Quag\",\n  \"Meltwater Channel\",\n  \"Drownfield Sink\",\n  \"Deadpine Forest\",\n  \"Skysand Ridge\",\n  \"Citadel of Ash \",\n  \"Glacierfall Passage\",\n  \"Whitepeak Ascent\",\n  \"Glacierfall Canyon\",\n  \"Everwinter Gap\",\n  \"Glacierfall Cross\",\n  \"Glacierfall Valley\",\n  \"Whitepeak Spring\",\n  \"Glacierfall Pass\",\n  \"Whitepeak Tundra\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Exalted Crypt\",\n  \"Exalted Crypt\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Springsump Basin\",\n  \"Springsump Wetland\",\n  \"Springsump Melt\",\n  \"Southgrove Escarp\",\n  \"Southgrove Copse\",\n  \"Southgrove Thicket\",\n  \"Dryvein Cross\",\n  \"Sunstrand Shoal\",\n  \"Sunstrand Delta\",\n  \"Dryvein Plain\",\n  \"Farshore Esker\",\n  \"Dryvein Oasis\",\n  \"Sunstrand Dunes\",\n  \"Farshore Heath\",\n  \"Sunstrand Quicksands\",\n  \"Battlebrae Peaks\",\n  \"Stonelake Fields\",\n  \"Stonelake Hillock\",\n  \"Stonemouth Southbluff\",\n  \"Frostspring Passage\",\n  \"Frostspring Vulcano\",\n  \"Whitewall Ridge\",\n  \"Whitewall Pass\",\n  \"Runnelvein Slough\",\n  \"Runnelvein Bog\",\n  \"Runnelvein Sink\",\n  \"Giantweald Copse\",\n  \"Deepwood Gorge\",\n  \"Giantweald Roots\",\n  \"Deepwood Copse\",\n  \"Giantweald Glade\",\n  \"Eye of the Forest \",\n  \"Eldersleep \",\n  \"Skylake Hinterlands\",\n  \"Thunderrock Draw\",\n  \"Floatshoal Floe\",\n  \"Iceburn Firth\",\n  \"Flammog Fork\",\n  \"Iceburn Peaks\",\n  \"Flammog Valley\",\n  \"Iceburn Cliffs\",\n  \"Iceburn Tundra\",\n  \"Flammog Desolation\",\n  \"Glacierfall Fissure\",\n  \"Driprock Tunnel\",\n  \"Shale Underway\",\n  \"Darkstone Drift\",\n  \"Exalted Crypt\",\n  \"Exalted Crypt\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Smuggler's Rut\",\n  \"Crosscut Skip\",\n  \"Gleamstone Deep\",\n  \"Widemoor Delta\",\n  \"Willowshade Mire\",\n  \"Willowshade Lake\",\n  \"Willowshade Icemarsh\",\n  \"Widemoor Flats\",\n  \"Willowshade Sink\",\n  \"Widemoor Fen\",\n  \"Twinchannel Narrows\",\n  \"Unhallowed Cloister \",\n  \"Westweald Thicket\",\n  \"Driftwood Glen\",\n  \"Westweald Shore\",\n  \"Sandrift Portal West\",\n  \"Sandrift Portal North\",\n  \"Sandrift Portal East\",\n  \"Sandmount Strand\",\n  \"Bleachskull Steppe\",\n  \"Sandmount Esker\",\n  \"Sandrift Steppe\",\n  \"Sandrift Prairie\",\n  \"Sandrift Coast\",\n  \"Sandrift Shore\",\n  \"Farshore Bay\",\n  \"Bleachskull Desert\",\n  \"Sandrift Expanse\",\n  \"Farshore Lagoon\",\n  \"Sandmount Desert\",\n  \"Sandrift Dunes\",\n  \"Farshore Drylands\",\n  \"Sandrift Fringe\",\n  \"Farshore Cape\",\n  \"Sandmount Ascent\",\n  \"Windgrass Portal West\",\n  \"Windgrass Portal North\",\n  \"Windgrass Portal South\",\n  \"Braemore Upland\",\n  \"Windgrass Border\",\n  \"Windgrass Gully\",\n  \"Windgrass Rill\",\n  \"Windgrass Precipice\",\n  \"Braemore Lowland\",\n  \"Windgrass Fields\",\n  \"Windgrass Coast\",\n  \"Highstone Mound\",\n  \"Avalanche Ravine\",\n  \"Frostbite Chasm\",\n  \"Frostseep Ravine\",\n  \"Frostbite Mountain\",\n  \"Frostseep Crevasse\",\n  \"Longfen Marsh\",\n  \"Mudfoot Sump\",\n  \"Mudfoot Mounds\",\n  \"Longfen Veins\",\n  \"Deathreach Priory \",\n  \"Greenhollow Vale\",\n  \"Greenhollow Copse\",\n  \"Highstone Plains\",\n  \"Battlebrae Flatland\",\n  \"Highstone Grassland\",\n  \"Gravemound Brim\",\n  \"Gravemound Hills\",\n  \"Gravemound Slope\",\n  \"Battlebrae Meadow\",\n  \"Windgrass Terrace\",\n  \"Gravemound Knoll\",\n  \"Gravemound Cliffs\",\n  \"Highstone Loch\",\n  \"Redtree Enclave\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Stoneroot Caverns\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Crypt\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Deathcap Channel\",\n  \"Glowmire Grotto\",\n  \"Lurkers' Hollow\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Stoneroot Caverns\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Middlemurk Path\",\n  \"Craglight Cavern\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Deathwisp Sink\",\n  \"Deathwisp Bog\",\n  \"Sunkenbough Woods\",\n  \"Black Monastery \",\n  \"Sunkenbough Spring\",\n  \"Rivercopse Crossing\",\n  \"Driftwood Vale\",\n  \"Hightree Borderlands\",\n  \"Rivercopse Curve\",\n  \"Driftwood Hollow\",\n  \"Rivercopse Path\",\n  \"Darkbough Snag\",\n  \"Rivercopse Fount\",\n  \"Sunfang Ravine\",\n  \"Sunfang Approach\",\n  \"Parchsand Cliffs\",\n  \"Sunfang Cliffs\",\n  \"Sunfang Wasteland\",\n  \"Wailing Bulwark \",\n  \"Sunfang Dawn\",\n  \"Parchsand Drought\",\n  \"Murdergulch Cross\",\n  \"Murdergulch Gap\",\n  \"Razorrock Passage\",\n  \"Razorrock Valley\",\n  \"Highstone Meadow\",\n  \"Battlebrae Plain\",\n  \"Battlebrae Lake\",\n  \"Stonemouth Northbluff\",\n  \"Thunderrock Rapids\",\n  \"Razorrock Ravine\",\n  \"Razorrock Edge\",\n  \"Stonemouth Bay\",\n  \"Thunderrock Ascent\",\n  \"Thunderrock Upland\",\n  \"Murdergulch Trail\",\n  \"Razorrock Chasm\",\n  \"Razorrock Verge\",\n  \"Razorrock Bank\",\n  \"Highstone Plateau\",\n  \"Battlebrae Grassland\",\n  \"Murdergulch Divide\",\n  \"Murdergulch Ravine\",\n  \"Razorrock Gulch\",\n  \"Firesink Caldera\",\n  \"Whitecliff Peak\",\n  \"Firesink Trench\",\n  \"Whitecliff Expanse\",\n  \"Avalanche Incline\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Cathedral of Light\",\n  \"Chambers of Truth\",\n  \"Chambers of Truth\",\n  \"Exalted Crypt\",\n  \"Exalted Crypt\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Undercrypt\",\n  \"Bedrock Passage\",\n  \"Everglow Deep\",\n  \"Longfen Arms\",\n  \"Thirstwater Steppe\",\n  \"Dryvein Riverbed\",\n  \"Thirstwater Waste\",\n  \"Dryvein Steppe\",\n  \"Dryvein End\",\n  \"Thirstwater Gully\",\n  \"Dryvein Confluence\",\n  \"Daemonium Keep \",\n  \"Nightbloom Track\",\n  \"Exalted Undercrypt\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Exalted Crypt\",\n  \"Mudrock Burrow\",\n  \"Deathcreep Adit\",\n  \"Exalted Crypt\",\n  \"Exalted Undercrypt\",\n  \"Arthur's Rest \",\n  \"Chambers of Truth\",\n  \"Chambers of Truth\",\n  \"Cathedral of Light\",\n  \"Merlyn's Rest \",\n  \"Conquerors' Hall Lvl. 1\",\n  \"Conquerors' Hall Lvl. 2\",\n  \"Conquerors' Hall Lvl. 1\",\n  \"Conquerors' Hall Lvl. 2\",\n  \"Conquerors' Hall Lvl. 1\",\n  \"Conquerors' Hall Lvl. 2\",\n  \"Conquerors' Hall Lvl. 1\",\n  \"Conquerors' Hall Lvl. 2\",\n  \"Conquerors' Hall Lvl. 1\",\n  \"Conquerors' Hall Lvl. 2\",\n  \"Morgana's Rest \",\n  \"Cathedral of Light\",\n  \"Stoneroot Caverns\",\n  \"Chambers of Truth\",\n  \"Cathedral of Ligh\",\n  \"ResourceDebug\",\n  \"Ouyos-Aoeuam\",\n  \"Coues-Exakrom\",\n  \"Puros-Amayam\",\n  \"Pures-Ouozlum\",\n  \"Soros-Axaesum\",\n  \"Huyos-Uxeulum\",\n  \"Ceres-Iooinum\",\n  \"Cetos-Obaelos\",\n  \"Oieos-Umiutum\",\n  \"Sebos-Avoirom\",\n  \"Teros-Auiusum\",\n  \"Oebos-Ixakaum\",\n  \"Touos-Uoemtum\",\n  \"Xasos-Aeoilos\",\n  \"Xuros-Eyoztum\",\n  \"Pasos-Avosam\",\n  \"Oasos-Uromlum\",\n  \"Casos-Uruxtum\",\n  \"Ceros-Aeaylum\",\n  \"Xouos-Aioblos\",\n  \"Oasos-Eraerom\",\n  \"Tetos-Igaelum\",\n  \"Hynos-Oiaelos\",\n  \"Hebos-Ulamsum\",\n  \"Hiros-Iuaerom\",\n  \"Cynos-Avixnum\",\n  \"Conos-Avaelum\",\n  \"Tetos-Ulaurom\",\n  \"Oures-Araosum\",\n  \"Hures-Ugumtum\",\n  \"Hasos-Iuimaum\",\n  \"Foros-Egoisum\",\n  \"Hasos-Agoitum\",\n  \"Setos-Avamsum\",\n  \"Tonos-Obayam\",\n  \"Honos-Umayaum\",\n  \"Huyes-Ogozlum\",\n  \"Curos-Avulsum\",\n  \"Cebos-Avemlum\",\n  \"Hasos-Inayaum\",\n  \"Sasos-Egeylos\",\n  \"Coros-Aiayrom\",\n  \"Hiros-Exozlos\",\n  \"Tiros-Ouultum\",\n  \"Cases-Ugumlos\",\n  \"Fynes-Unavtum\",\n  \"Fetos-Aiaylos\",\n  \"Fouos-Agosaum\",\n  \"Huyos-Eyoztum\",\n  \"Poues-Unatam\",\n  \"Fouos-Amaurom\",\n  \"Suyos-Onaytum\",\n  \"Xasos-Oneulum\",\n  \"Oynos-Oyozam\",\n  \"Coros-Atinaum\",\n  \"Sasos-Oiozlum\",\n  \"Xynos-Oyogam\",\n  \"Cynos-Oxaeaum\",\n  \"Tynos-Atatlos\",\n  \"Firos-Enomaum\",\n  \"Hynes-Exemrom\",\n  \"Hebes-Ouaylos\",\n  \"Foues-Aeaosum\",\n  \"Xilos-Osayam\",\n  \"Casos-Ayosrom\",\n  \"Souos-Ososlos\",\n  \"Xebos-Emimsum\",\n  \"Oetos-Oyexlos\",\n  \"Xebos-Exostum\",\n  \"Tynos-Eyexrom\",\n  \"Casos-Aximam\",\n  \"Hasos-Ayousum\",\n  \"Fasos-Ayiotum\",\n  \"Pebos-Avosrom\",\n  \"Sases-Avuotum\",\n  \"Xases-Oxoulum\",\n  \"Hieos-Avaolum\",\n  \"Xasos-Aoemaum\",\n  \"Hasos-Osuorom\",\n  \"Oynos-Eramtum\",\n  \"Couos-Ayayaum\",\n  \"Siros-Obobrom\",\n  \"Souos-Umogaum\",\n  \"Cilos-Avioaum\",\n  \"Fonos-Aiugsum\",\n  \"Synos-Ayailos\",\n  \"Xiles-Aiavlum\",\n  \"Sases-Aoarsum\",\n  \"Casos-Aiagsum\",\n  \"Tieos-Ayoslum\",\n  \"Hieos-Aiigaum\",\n  \"Poros-Aiayrom\",\n  \"Cilos-Ofailos\",\n  \"Silos-Apenlum\",\n  \"Fynos-Alodrom\",\n  \"Firos-Ezatam\",\n  \"Firos-Osinsum\",\n  \"Soues-Uzurtum\",\n  \"Ooros-Ataltum\",\n  \"Hynes-Ieatun\",\n  \"Fuyes-Izohun\",\n  \"Xetos-Obursum\",\n  \"Oetos-Ofailos\",\n  \"Tynos-Igurlum\",\n  \"Puros-Ofavam\",\n  \"Setos-Aiaitum\",\n  \"Tynos-Uxavrom\",\n  \"Souos-Availos\",\n  \"Sebos-Ugersum\",\n  \"Peros-Aiataum\",\n  \"Pieos-Ofairom\",\n  \"Sieos-Ofugtum\",\n  \"Tasos-Iriglos\",\n  \"Tiros-Odoxlum\",\n  \"Xases-Ataglos\",\n  \"Oires-Oloblum\",\n  \"Firos-Aiavam\",\n  \"Heros-Atoyam\",\n  \"Petos-Aietam\",\n  \"Touos-Ataglos\",\n  \"Poros-Oconun\",\n  \"Honos-Oyezam\",\n  \"Fieos-Atezsum\",\n  \"Ooros-Ecunsum\",\n  \"Coros-Alieam\",\n  \"Couos-Opodam\",\n  \"Horos-Ohenlum\",\n  \"Files-Azazsum\",\n  \"Sasos-Abizaum\",\n  \"Fones-Opavun\",\n  \"Fiees-Ohohtum\",\n  \"Siros-Ofurlos\",\n  \"Oiros-Alaiam\",\n  \"Xiros-Aiairom\",\n  \"Silos-Oyarlum\",\n  \"Fonos-Oleraum\",\n  \"Fieos-Aiuttum\",\n  \"Filos-Abalam\",\n  \"Synos-Oyarlos\",\n  \"Febos-Acalun\",\n  \"Pieos-Eterrom\",\n  \"Feros-Oyuctum\",\n  \"Pynos-Opabrom\",\n  \"Foros-Uzazlum\",\n  \"Cieos-Atatlum\",\n  \"Huros-Atontum\",\n  \"Tonos-Aboysum\",\n  \"Hiles-Izizaum\",\n  \"Sebos-Oyohun\",\n  \"Cilos-Otatrom\",\n  \"Oasitos-Aoeuam\",\n  \"Curites-Exakrom\",\n  \"Petitos-Amayam\",\n  \"Pynites-Ouozlum\",\n  \"Suyitos-Axaesum\",\n  \"Honitos-Uxeulum\",\n  \"Cuyites-Iooinum\",\n  \"Cieitos-Obaelos\",\n  \"Oonitos-Umiutum\",\n  \"Siritos-Avoirom\",\n  \"Tuyitos-Auiusum\",\n  \"Oieitos-Ixakaum\",\n  \"Turitos-Uoemtum\",\n  \"Xouitos-Aeoilos\",\n  \"Xouitos-Eyoztum\",\n  \"Peritos-Avosam\",\n  \"Oynitos-Uromlum\",\n  \"Conitos-Uruxtum\",\n  \"Cebitos-Aeaylum\",\n  \"Xuyitos-Aioblos\",\n  \"Oebitos-Eraerom\",\n  \"Tebitos-Igaelum\",\n  \"Huritos-Oiaelos\",\n  \"Hynitos-Ulamsum\",\n  \"Hetitos-Iuaerom\",\n  \"Cetitos-Avixnum\",\n  \"Casitos-Avaelum\",\n  \"Tasitos-Ulaurom\",\n  \"Oynites-Araosum\",\n  \"Hilites-Ugumtum\",\n  \"Huritos-Iuimaum\",\n  \"Fynitos-Egoisum\",\n  \"Huyitos-Agoitum\",\n  \"Soritos-Avamsum\",\n  \"Tasitos-Obayam\",\n  \"Hasitos-Umayaum\",\n  \"Hynites-Ogozlum\",\n  \"Ceritos-Avulsum\",\n  \"Coritos-Avemlum\",\n  \"Heritos-Inayaum\",\n  \"Seritos-Egeylos\",\n  \"Cetitos-Aiayrom\",\n  \"Heritos-Exozlos\",\n  \"Tieitos-Ouultum\",\n  \"Cieites-Ugumlos\",\n  \"Fieites-Unavtum\",\n  \"Foritos-Aiaylos\",\n  \"Fynitos-Agosaum\",\n  \"Heritos-Eyoztum\",\n  \"Pirites-Unatam\",\n  \"Fonitos-Amaurom\",\n  \"Seritos-Onaytum\",\n  \"Xetitos-Oneulum\",\n  \"Oebitos-Oyozam\",\n  \"Casitos-Atinaum\",\n  \"Souitos-Oiozlum\",\n  \"Xebitos-Oyogam\",\n  \"Conitos-Oxaeaum\",\n  \"Turitos-Atatlos\",\n  \"Feritos-Enomaum\",\n  \"Hebites-Exemrom\",\n  \"Hurites-Ouaylos\",\n  \"Fynites-Aeaosum\",\n  \"Xoritos-Osayam\",\n  \"Cieitos-Ayosrom\",\n  \"Synitos-Ososlos\",\n  \"Xetitos-Emimsum\",\n  \"Oeritos-Oyexlos\",\n  \"Xoritos-Exostum\",\n  \"Tieitos-Eyexrom\",\n  \"Cetitos-Aximam\",\n  \"Hynitos-Ayousum\",\n  \"Fuyitos-Ayiotum\",\n  \"Petitos-Avosrom\",\n  \"Suyites-Avuotum\",\n  \"Xerites-Oxoulum\",\n  \"Hasitos-Avaolum\",\n  \"Xilitos-Aoemaum\",\n  \"Hilitos-Osuorom\",\n  \"Oiritos-Eramtum\",\n  \"Curitos-Ayayaum\",\n  \"Setitos-Obobrom\",\n  \"Sasitos-Umogaum\",\n  \"Cieitos-Avioaum\",\n  \"Fynitos-Aiugsum\",\n  \"Sonitos-Ayailos\",\n  \"Xonites-Aiavlum\",\n  \"Synites-Aoarsum\",\n  \"Cynitos-Aiagsum\",\n  \"Tetitos-Ayoslum\",\n  \"Hilitos-Aiigaum\",\n  \"Ponitos-Aiayrom\",\n  \"Conitos-Ofailos\",\n  \"Soritos-Apenlum\",\n  \"Firitos-Alodrom\",\n  \"Fynitos-Ezatam\",\n  \"Feritos-Osinsum\",\n  \"Suyites-Uzurtum\",\n  \"Ouritos-Ataltum\",\n  \"Hurites-Ieatun\",\n  \"Filites-Izohun\",\n  \"Xynitos-Obursum\",\n  \"Ouritos-Ofailos\",\n  \"Tonitos-Igurlum\",\n  \"Piritos-Ofavam\",\n  \"Soritos-Aiaitum\",\n  \"Tonitos-Uxavrom\",\n  \"Synitos-Availos\",\n  \"Sasitos-Ugersum\",\n  \"Puyitos-Aiataum\",\n  \"Pouitos-Ofairom\",\n  \"Suyitos-Ofugtum\",\n  \"Toritos-Iriglos\",\n  \"Tebitos-Odoxlum\",\n  \"Xurites-Ataglos\",\n  \"Oynites-Oloblum\",\n  \"Furitos-Aiavam\",\n  \"Hynitos-Atoyam\",\n  \"Pynitos-Aietam\",\n  \"Tilitos-Ataglos\",\n  \"Peritos-Oconun\",\n  \"Hynitos-Oyezam\",\n  \"Fasitos-Atezsum\",\n  \"Oeritos-Ecunsum\",\n  \"Casitos-Alieam\",\n  \"Cilitos-Opodam\",\n  \"Huyitos-Ohenlum\",\n  \"Fasites-Azazsum\",\n  \"Silitos-Abizaum\",\n  \"Febites-Opavun\",\n  \"Ferites-Ohohtum\",\n  \"Synitos-Ofurlos\",\n  \"Oouitos-Alaiam\",\n  \"Xoritos-Aiairom\",\n  \"Sasitos-Oyarlum\",\n  \"Fasitos-Oleraum\",\n  \"Fouitos-Aiuttum\",\n  \"Fynitos-Abalam\",\n  \"Suyitos-Oyarlos\",\n  \"Fuyitos-Acalun\",\n  \"Pilitos-Eterrom\",\n  \"Fasitos-Oyuctum\",\n  \"Piritos-Opabrom\",\n  \"Filitos-Uzazlum\",\n  \"Cynitos-Atatlum\",\n  \"Hebitos-Atontum\",\n  \"Tuyitos-Aboysum\",\n  \"Honites-Izizaum\",\n  \"Siritos-Oyohun\",\n  \"Cieitos-Otatrom\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"DNG-0702\",\n  \"FOCUS-DNG-000\",\n  \"FOCUS-DNG-001-MAIN\",\n  \"FOCUS-DNG-001-SUB\",\n  \"FOCUS-DNG-002-MAIN\",\n  \"FOCUS-DNG-002-SUB\",\n  \"FOCUS-DNG-002\",\n  \"FOCUS-DNG-003-MAIN\",\n  \"FOCUS-DNG-003-SUB\",\n  \"FOCUS-DNG-004-MAIN\",\n  \"FOCUS-DNG-004-SUB\",\n  \"PSG-0038\",\n  \"PSG-0039\",\n  \"PSG-0042\",\n  \"PSG-0044\",\n  \"PSG-0045\",\n  \"PSG-0048\",\n  \"PSG-0049\",\n  \"PSG-0050\",\n  \"PSG-0051\",\n  \"PSG-0052\",\n  \"PSG-0053\",\n  \"PSG-0054\",\n  \"STUB-0702\",\n  \"TUT-WINECELLAR\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"0003-2\",\n  \"0003\",\n  \"0246\",\n  \"0247\",\n  \"0248\",\n  \"0249\",\n  \"1005-2\",\n  \"1005\",\n  \"1247\",\n  \"1248\",\n  \"1249\",\n  \"2001-2\",\n  \"2001\",\n  \"2243\",\n  \"2244\",\n  \"2245\",\n  \"2246\",\n  \"3000-2\",\n  \"3000\",\n  \"3250\",\n  \"3251\",\n  \"3252\",\n  \"4005-2\",\n  \"4005\",\n  \"4250\",\n  \"4251\",\n  \"4252\",\n  \"4299\",\n  \"DNG-0402\",\n  \"DNG-0502\",\n  \"DNG-0602\",\n  \"DNG-0802\",\n  \"FOCUS-DNG-001\",\n  \"Halloween-01\",\n  \"PSG-0008\",\n  \"PSG-0009\",\n  \"PSG-0010\",\n  \"PSG-0011\",\n  \"PSG-0012\",\n  \"PSG-0013\",\n  \"PSG-0014\",\n  \"PSG-0015\",\n  \"PSG-0016\",\n  \"PSG-0017\",\n  \"PSG-0018\",\n  \"PSG-0019\",\n  \"PSG-0020\",\n  \"PSG-0021\",\n  \"PSG-0022\",\n  \"PSG-0023\",\n  \"PSG-0024\",\n  \"PSG-0025\",\n  \"PSG-0026\",\n  \"PSG-0027\",\n  \"PSG-0028\",\n  \"PSG-0029\",\n  \"PSG-0030\",\n  \"PSG-0031\",\n  \"PSG-0032\",\n  \"PSG-0033\",\n  \"PSG-0034\",\n  \"PSG-0035\",\n  \"PSG-0036\",\n  \"PSG-0037\",\n  \"PSG-0040\",\n  \"PSG-0041\",\n  \"PSG-0043\",\n  \"PSG-0046\",\n  \"PSG-0047\",\n  \"STUB-0201\",\n  \"STUB-0203\",\n  \"STUB-0302\",\n  \"STUB-0402\",\n  \"STUB-0502\",\n  \"STUB-0602\",\n  \"STUB-0802\",\n  \"Quaent-Vynsum\",\n  \"Quaent-Al-Vynsum\",\n  \"Quaent-Tersis\",\n  \"Quaent-Al-Tersis\",\n  \"Quaent-Viesom\",\n  \"Quaent-Al-Viesom\",\n  \"Quatun-Nusas\",\n  \"Quatun-Et-Nusas\",\n  \"Quaent-Qintis\",\n  \"Quaent-Al-Qintis\",\n  \"Quatun-Odetum\",\n  \"Quatun-Et-Odetum\",\n  \"Quaent-Al-Odesum\",\n  \"Quaent-In-Odesum\",\n  \"Quaent-Al-Nusis\",\n  \"Quaent-In-Nusis\",\n  \"Qiient-Tersom\",\n  \"Qiient-In-Tersom\",\n  \"Qiient-Odesas\",\n  \"Qiient-Qi-Odesas\",\n  \"Qiient-Nutis\",\n  \"Qiient-In-Nutis\",\n  \"Qiient-Vyntum\",\n  \"Qiient-In-Vyntum\",\n  \"Qiient-Al-Odesum\",\n  \"Qiient-Si-Odesum\",\n  \"Qiient-Al-Vynsis\",\n  \"Qiient-Qi-Vynsis\",\n  \"Qiitun-Et-Vynsom\",\n  \"Qiitun-Si-Vynsom\",\n  \"Qiient-Al-Tersas\",\n  \"Qiient-Qi-Tersas\",\n  \"Qiitun-Vietis\",\n  \"Qiitun-Et-Vietis\",\n  \"Qiient-Et-Tertum\",\n  \"Qiient-Si-Tertum\",\n  \"Qiient-Qinsum\",\n  \"Qiient-Et-Qinsum\",\n  \"Qiient-Al-Viesis\",\n  \"Qiient-In-Viesis\",\n  \"Qiient-Al-Nusom\",\n  \"Qiient-Qi-Nusom\",\n  \"Qiient-Et-Nusas\",\n  \"Qiient-Si-Nusas\",\n  \"Qiient-Et-Odetis\",\n  \"Qiient-Sa-Odetis\",\n  \"Qiient-In-Odetum\",\n  \"Qiient-Oc-Odetum\",\n  \"Qiitun-Duosum\",\n  \"Qiitun-Al-Duosum\",\n  \"Qiient-Al-Qinsis\",\n  \"Qiient-In-Qinsis\",\n  \"Secent-Odesom\",\n  \"Secent-Qi-Odesom\",\n  \"Sectun-Tersas\",\n  \"Sectun-Et-Tersas\",\n  \"Secent-Al-Odetis\",\n  \"Secent-Si-Odetis\",\n  \"Secent-Vyntum\",\n  \"Secent-Et-Vyntum\",\n  \"Secent-Viesum\",\n  \"Secent-Al-Viesum\",\n  \"Secent-Et-Odesis\",\n  \"Secent-Sa-Odesis\",\n  \"Sectun-Qinsom\",\n  \"Sectun-In-Qinsom\",\n  \"Secent-Al-Qinsom\",\n  \"Secent-Qi-Qinsom\",\n  \"Sectun-Al-Vyntis\",\n  \"Sectun-In-Vyntis\",\n  \"Secent-Nutum\",\n  \"Secent-Al-Nutum\",\n  \"Secent-Al-Tersum\",\n  \"Secent-In-Tersum\",\n  \"Sectun-In-Odesis\",\n  \"Sectun-Oc-Odesis\",\n  \"Secent-Duosom\",\n  \"Secent-Al-Duosom\",\n  \"Secent-Et-Qinsas\",\n  \"Secent-Si-Qinsas\",\n  \"Setent-Vietis\",\n  \"Setent-Al-Vietis\",\n  \"Settun-Odetum\",\n  \"Settun-Et-Odetum\",\n  \"Setent-Nusum\",\n  \"Setent-Et-Nusum\",\n  \"Settun-Vynsis\",\n  \"Settun-Al-Vynsis\",\n  \"Settun-Tersom\",\n  \"Settun-Al-Tersom\",\n  \"Setent-Duosas\",\n  \"Setent-Al-Duosas\",\n  \"Setent-Qintis\",\n  \"Setent-Et-Qintis\",\n  \"Settun-Al-Odetum\",\n  \"Settun-In-Odetum\",\n  \"Setent-Al-Qinsum\",\n  \"Setent-In-Qinsum\",\n  \"Settun-Al-Nusis\",\n  \"Settun-In-Nusis\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"Corrupted Lair\",\n  \"LEGACY-KEEPER-SOLO-01\",\n  \"LEGACY-KEEPER-SOLO-02\",\n  \"RoadPve-151\",\n  \"RoadPve-152\",\n  \"RoadPve-153\",\n  \"RoadPve-154\",\n  \"RoadPve-155\",\n  \"RoadPve-156\",\n  \"Conquerors' Hall Lvl. 3\",\n  \"Conquerors' Hall Lvl. 3\",\n  \"Conquerors' Hall Lvl. 3\",\n  \"Conquerors' Hall Lvl. 3\",\n  \"Conquerors' Hall Lvl. 3\",\n  \"Conquerors' Hall Lvl. 3\",\n];\n","import {findBestMatch} from \"string-similarity\";\nimport clusters from \"./clusters\";\n\nconst bestCluster = (raw: string) => {\n    if (!raw) return raw;\n    const res = findBestMatch(raw, clusters);\n    return res.bestMatch.target;\n}\n\nexport default bestCluster","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\nimport bestCluster from \"../logic/bestCluster\";\n\nconst ProcessedCluster: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(167, 25, 1668, 1035);\n    this.greyscale();\n    this.threshold(128);\n  });\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={parsed}\n      progress={progress}\n      postProcess={bestCluster}\n      field=\"from\"\n    />\n  );\n};\n\nexport default ProcessedCluster;\n","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\n\nconst postProcess = (raw: string) => {\n  const x = raw.replace(/\\s/g, \"\");\n  const res = x.match(/(\\d\\d:\\d\\d)/);\n  if (!res) return \"\";\n  return res[1];\n};\n\nconst ProcessedTime: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(54, 25, 1836, 1035);\n    this.greyscale();\n    this.threshold(128);\n  });\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={parsed}\n      progress={progress}\n      postProcess={postProcess}\n      field=\"currentTime\"\n    />\n  );\n};\n\nexport default ProcessedTime;\n","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\nimport bestCluster from \"../logic/bestCluster\";\n\nconst ProcessedDestination: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(286, 29, 61, 23);\n    this.invert();\n    this.greyscale();\n    this.threshold(128);\n  });\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={parsed}\n      progress={progress}\n      postProcess={bestCluster}\n      field=\"to\"\n    />\n  );\n};\n\nexport default ProcessedDestination;\n","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\n\nconst postProcess = (raw: string) => {\n  const x = raw.toLowerCase().replace(/\\s/g, \"\");\n  const res = x.match(\n    /closesin((?:[0-2]?[0-9]h[0-5][0-9]m)|(?:[0-5]?[0-9]m[0-5][0-9][s8§]))/\n  );\n  if (!res) return \"\";\n  let value = res[1];\n  if (value[value.length - 1] !== \"m\") {\n    value = value.substr(0, value.length - 1) + \"s\";\n  }\n  return value;\n};\n\nconst ProcessedRemainingTime: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(155, 20, 200, 83);\n    // this.gamma(0.8)\n    // this.selectByColor(\n    //   [\n    //     [255, 255, 255],\n    //     [255, 78, 57],\n    //   ],\n    //   128\n    // );\n    this.invert();\n  });\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={parsed}\n      progress={progress}\n      postProcess={postProcess}\n      field=\"remainingTime\"\n    />\n  );\n};\n\nexport default ProcessedRemainingTime;\n","import React, { useContext } from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\nimport {\n  TableRow,\n  TableCell,\n  Input,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport CamanCanvas from \"./CamanCanvas\";\nimport { ScreenshotContext } from \"./ProcessedScreenshot\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\n\nconst field = \"size\";\n\nconst PortalSize: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const camanCallback = function (this: any) {\n    this.crop(55, 55);\n    const self = this;\n    this.render(function () {\n      const canvas: HTMLCanvasElement = self.canvas;\n      const ctx = canvas.getContext(\"2d\")!;\n      const imageData = ctx.getImageData(34, 22, 1, 1);\n      const [r, g, b] = Array.from(imageData.data);\n      if (r > 160) {\n        updateData(screenshot.id, field, \"RAID\");\n      } else if (g > 160) {\n        updateData(screenshot.id, field, \"SOLO\");\n      } else if (b > 160) {\n        updateData(screenshot.id, field, \"GROUP\");\n      }\n    });\n  };\n\n  const screenshot = useContext(ScreenshotContext);\n  const { updateData, data } = useContext(ScreenshotStoreContext);\n  return (\n    <TableRow>\n      <TableCell>\n        <CamanCanvas imageUrl={imageUrl} camanCallback={camanCallback} />\n      </TableCell>\n      <TableCell>\n        <RadioGroup\n          row\n          value={data && data[screenshot.id] && data[screenshot.id][field] || \"MISSING\"}\n          onChange={(e) => updateData(screenshot.id, field, e.target.value)}\n        >\n          <FormControlLabel value=\"SOLO\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"GROUP\" control={<Radio />} label=\"7\" />\n          <FormControlLabel value=\"RAID\" control={<Radio />} label=\"20\" />\n        </RadioGroup>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default PortalSize;\n","import React, { useCallback, useState } from \"react\";\nimport CamanCanvas from \"./CamanCanvas\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport ProcessedDestination from \"./ProcessedDestination\";\nimport ProcessedRemainingTime from \"./ProcessedRemainingTime\";\nimport PortalSize from \"./PortalSize\";\n\nconst PortalPopup: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const [popupObjectUrl, setPopupObjectUrl] = useState(\"\");\n  const camanCallback = useCallback(function (this: any) {\n    const self = this;\n    self.cropPortalPopup();\n    self.render(function () {\n      (self.canvas as HTMLCanvasElement).toBlob((blob) => {\n        setPopupObjectUrl(URL.createObjectURL(blob));\n      });\n    });\n  }, []);\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <CamanCanvas imageUrl={imageUrl} camanCallback={camanCallback} />\n        </TableCell>\n        <TableCell></TableCell>\n      </TableRow>\n      {popupObjectUrl && (\n        <>\n          <ProcessedDestination imageUrl={popupObjectUrl} />\n          <ProcessedRemainingTime imageUrl={popupObjectUrl} />\n          <PortalSize imageUrl={popupObjectUrl} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PortalPopup;\n","import React from \"react\";\nimport ProcessedCluster from \"./ProcessedCluster\";\nimport { Table, TableHead, TableCell, TableBody } from \"@material-ui/core\";\nimport ProcessedTime from \"./ProcessedTime\";\nimport PortalPopup from \"./PortalPopup\";\n\nexport const ScreenshotContext = React.createContext({} as any);\n\nconst ProcessedScreenshot: React.FC<{ screenshot: any }> = (props) => {\n  const { screenshot } = props;\n  const imageUrl = URL.createObjectURL(screenshot.image);\n  return (\n    <ScreenshotContext.Provider value={screenshot}>\n      <Table>\n        <TableHead>\n          <TableCell>Image</TableCell>\n          <TableCell>Parsed</TableCell>\n        </TableHead>\n        <TableBody>\n          <PortalPopup imageUrl={imageUrl} />\n          <ProcessedCluster imageUrl={imageUrl} />\n          <ProcessedTime imageUrl={imageUrl} />\n        </TableBody>\n      </Table>\n    </ScreenshotContext.Provider>\n  );\n};\n\nexport default ProcessedScreenshot;\n","import React, { useContext } from \"react\";\nimport { List, ListItem, Typography } from \"@material-ui/core\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\nimport ProcessedScreenshot from \"./ProcessedScreenshot\";\n\nconst ProcessedScreenshotList: React.FC = (props) => {\n  const { screenshots } = useContext(ScreenshotStoreContext);\n  return (\n    <>\n      <Typography variant=\"h4\">Review and edit results</Typography>\n      <List>\n        {screenshots.map((ss) => (\n          <ListItem key={ss.id}>\n            <ProcessedScreenshot screenshot={ss} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ProcessedScreenshotList;\n","import React, { useContext } from \"react\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\nimport Papa from \"papaparse\";\nimport { TextField, Typography } from \"@material-ui/core\";\n\nconst DataBox: React.FC = () => {\n  const { data } = useContext(ScreenshotStoreContext);\n  const reshaped = Object.values(data);\n  const csv = Papa.unparse(reshaped, {\n    columns: [\"from\", \"to\", \"currentTime\", \"remainingTime\", \"size\"],\n  });\n  return (\n    <>\n      <Typography variant=\"h4\">Export your data (updated as the analysis progresses)</Typography>\n      <TextField multiline fullWidth label=\"Data (CSV)\" value={csv} />\n    </>\n  );\n};\n\nexport default DataBox;\n","import React from \"react\";\nimport \"./App.css\";\nimport ScreenshotStore from \"./components/ScreenshotStore\";\nimport Uploader from \"./components/Uploader\";\nimport ProcessedScreenshotList from \"./components/ProcessedScreenshotList\";\nimport DataBox from \"./components/DataBox\";\n\nfunction App() {\n  return (\n    <ScreenshotStore>\n      <Uploader />\n      <DataBox />\n      <ProcessedScreenshotList />\n    </ScreenshotStore>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}