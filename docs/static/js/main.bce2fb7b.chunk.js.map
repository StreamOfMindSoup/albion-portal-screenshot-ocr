{"version":3,"sources":["components/ScreenshotStore.tsx","components/DataStore.tsx","components/Uploader.tsx","components/CamanCanvas.tsx","components/OcrRow.tsx","logic/ocr.ts","hooks.tsx","logic/clusters.ts","logic/bestCluster.ts","components/ProcessedCluster.tsx","components/ProcessedTime.tsx","components/ProcessedDestination.tsx","components/ProcessedRemainingTime.tsx","components/PortalSize.tsx","components/PortalPopup.tsx","components/ProcessedScreenshot.tsx","components/ProcessedScreenshotList.tsx","logic/annotate.ts","components/DataBox.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultValue","screenshots","addScreenshots","setScreenshots","ScreenshotStoreContext","React","createContext","ScreenshotStore","props","children","useState","useCallback","screenshot","current","Provider","value","DataStoreContext","data","updateData","id","field","setData","DataStore","dotProp","set","Uploader","useContext","maxFileSize","Infinity","filesLimit","acceptedFiles","onChange","files","map","f","uuid","image","dropzoneText","isClose","x","target","tolerance","_","i","Math","abs","reduce","a","c","Caman","window","Plugin","register","ctx","this","canvas","getContext","Error","imageDataColumn","getImageData","streak","offset","top","y","color","Array","from","slice","imageDataRow","left","console","log","crop","Filter","processPlugin","arguments","colors","process","rgba","r","g","b","some","Boolean","CamanCanvas","imageUrl","camanCallback","canvasRef","useRef","useEffect","call","ref","ConnectedInput","parsed","ScreenshotContext","updateHandler","e","MemoizedInput","memo","Input","OcrRow","TableRow","TableCell","scheduler","createScheduler","init","Promise","all","fill","worker","createWorker","logger","load","loadLanguage","initialize","addWorker","ocr","progressCallback","addJob","text","useCaman","processingCallback","setParsed","progress","setProgress","self","render","toBlob","blob","URL","createObjectURL","result","clusterNamesById","Haytor","Ferndell","Stagbourne","Murkweald","Birchcopse","Oakcopse","Rowanwood","Larchroad","Slimehag","Stinkhag","Chillhag","Mardale","Russerdell","Redlake","Camlann","Astolat","Cedarcopse","ResourceDebug","clusters","Object","keys","bestCluster","raw","findBestMatch","bestMatch","ProcessedCluster","greyscale","threshold","postProcessed","useMemo","ProcessedTime","res","replace","match","postProcess","ProcessedDestination","invert","ProcessedRemainingTime","toLowerCase","length","substr","PortalSize","updateValue","imageData","RadioGroup","row","FormControlLabel","control","Radio","label","PortalPopup","popupObjectUrl","setPopupObjectUrl","cropPortalPopup","ProcessedScreenshot","Table","TableHead","TableBody","ProcessedScreenshotList","Typography","variant","List","ss","ListItem","key","annotate","rawData","currentDate","Date","closingDate","observationTimeMatch","currentTime","observationHours","parseInt","observationMinutes","remainingTimeMatch","remainingTime","remainingHours","remainingMinutes","observationDate","UTC","getUTCFullYear","getUTCMonth","getUTCDate","setUTCDate","setUTCMinutes","setUTCHours","getUTCHours","fromId","toId","to","rawColumns","annotatedColumns","DataBox","formatted","allData","values","filteredData","filter","every","incomplete","annotatedData","format","setFormat","Papa","unparse","columns","JSON","stringify","undefined","TextField","multiline","fullWidth","App","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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hB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,eAAgB,UAChB,eAAgB,UAChB,gBAAiB,UACjB,eAAgB,UAChB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,eAAgB,UAChB,gBAAiB,UACjB,iBAAkB,UAClB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UAClB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,iBAAkB,UA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","file":"static/js/main.bce2fb7b.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nconst defaultValue = {\n  screenshots: [] as any[],\n  addScreenshots: (screenshots: any[]) => {},\n  setScreenshots: (screenshots: any[]) => {},\n};\nexport const ScreenshotStoreContext = React.createContext(defaultValue);\n\nconst ScreenshotStore: React.FC = (props) => {\n  const { children } = props;\n  const [screenshots, setScreenshots] = useState(defaultValue.screenshots);\n  const addScreenshots = useCallback((screenshot: any[]) => {\n    setScreenshots((current) => [...current, ...screenshot]);\n  }, []);\n  return (\n    <ScreenshotStoreContext.Provider\n      value={{ screenshots, addScreenshots, setScreenshots }}\n    >\n      {children}\n    </ScreenshotStoreContext.Provider>\n  );\n};\n\nexport default ScreenshotStore;\n","import React, { useState, useCallback } from \"react\";\nimport dotProp from \"dot-prop-immutable\";\n\nconst defaultValue = {\n  data: {} as Record<string, any>,\n  updateData: (id: string, field: string, value: string) => {},\n  setData: (data: Record<string, any>) => {},\n};\nexport const DataStoreContext = React.createContext(defaultValue);\n\nconst DataStore: React.FC = (props) => {\n  const { children } = props;\n  const [data, setData] = useState<Record<string, any>>({});\n  const updateData = useCallback(\n    (id: string, field: string, value: string) => {\n      setData((current) => {\n        return dotProp.set(current, [id, field], value);\n      });\n    },\n    [setData]\n  );\n  return (\n    <DataStoreContext.Provider value={{ data, updateData, setData }}>\n      {children}\n    </DataStoreContext.Provider>\n  );\n};\n\nexport default DataStore;\n","import React, { useContext } from \"react\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { v4 as uuid } from \"uuid\";\nimport { DataStoreContext } from \"./DataStore\";\n\nconst Uploader: React.FC = () => {\n  const { setScreenshots } = useContext(ScreenshotStoreContext);\n  const { setData } = useContext(DataStoreContext);\n  return (\n    <DropzoneArea\n      maxFileSize={Infinity}\n      filesLimit={Infinity}\n      acceptedFiles={[\"image/*\"]}\n      onChange={(files) => {\n        setScreenshots(files.map((f) => ({ id: uuid(), image: f })));\n        setData({});\n      }}\n      dropzoneText=\"Drag and drop your screenshots here (1920x1080 and English only). Screenshots must be taken while mousing over a portal on the minimap.\"\n    />\n  );\n};\n\nexport default Uploader;\n","import React, { useEffect, useRef } from \"react\";\n\nconst isClose = (x: number[], target: number[], tolerance: number = 5) => {\n  return (\n    x.map((_, i) => Math.abs(x[i] - target[i])).reduce((a, c) => a + c, 0) <=\n    tolerance\n  );\n};\n\nconst Caman = (window as any).Caman;\n\nCaman.Plugin.register(\"cropPortalPopup\", function (this: any) {\n  const canvas: HTMLCanvasElement = this.canvas;\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    throw Error(\"Context is null\");\n  }\n  //   const imageData = ctx.getImageData(left, top, width, height);\n  const xColumn = 1578;\n  const imageDataColumn = ctx.getImageData(xColumn, 700, 1, 380);\n\n  let streak = 0;\n  let offset = 0;\n  let top = 0;\n  for (let y = 0; y < 380; y++) {\n    offset = y * 4;\n    const color = Array.from(imageDataColumn.data.slice(offset, offset + 3));\n    // console.log(JSON.stringify(color));\n    if (isClose(color, [255, 178, 18]) || isClose(color, [143, 109, 45])) {\n      streak++;\n      if (streak === 14) {\n        top = y - streak + 1;\n        break;\n      }\n    } else {\n      streak = 0;\n    }\n  }\n\n  const imageDataRow = ctx.getImageData(1450, 700 + top, 470, 1);\n\n  streak = 0;\n  offset = 0;\n  let left = 0;\n  for (let x = 0; x < 470; x++) {\n    offset = x * 4;\n    const color = Array.from(imageDataRow.data.slice(offset, offset + 3));\n    if (isClose(color, [255, 178, 18]) || isClose(color, [144, 110, 46])) {\n      streak++;\n      if (streak === 60) {\n        console.log(\"Streak\");\n        left = x - streak + 1;\n        break;\n      }\n    } else {\n      streak = 0;\n    }\n  }\n\n  this.crop(357, 109, 1450 + left - 16, 700 + top - 59);\n\n  //   const rowCounter = Array(height).fill(0);\n  //   const columnCounter = Array(width).fill(0);\n\n  //   let offset = 0;\n  //   for (let x = 0; x < width; x++) {\n  //     for (let y = 0; y < height; y++) {\n  //       offset = x * y * 4;\n  //       const r = imageData.data[offset];\n  //       const g = imageData.data[offset + 1];\n  //       const b = imageData.data[offset + 2];\n  //       if (\n  //         (r === 255 && g === 178 && b === 18) ||\n  //         (r === 144 && g === 110 && b === 46)\n  //       ) {\n  //         rowCounter[y] += 1;\n  //         columnCounter[x] += 1;\n  //       }\n  //     }\n  //   }\n});\n\nCaman.Filter.register(\"cropPortalPopup\", function (this: any) {\n  this.processPlugin(\"cropPortalPopup\", arguments);\n});\n\nCaman.Filter.register(\"selectByColor\", function (\n  this: any,\n  colors: number[][],\n  tolerance?: number\n) {\n  this.process(\"selectByColor\", function (\n    this: any,\n    rgba: Record<string, number>\n  ) {\n    const { r, g, b } = rgba;\n    const value = colors\n      .map((color) => isClose([r, g, b], color, tolerance))\n      .some(Boolean)\n      ? 255\n      : 0;\n    for (const x of [\"r\", \"g\", \"b\"]) {\n      rgba[x] = value;\n    }\n  });\n});\n\nconst CamanCanvas: React.FC<{\n  imageUrl: string;\n  camanCallback: () => void;\n}> = (props) => {\n  const { imageUrl, camanCallback } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(\n    (null as unknown) as HTMLCanvasElement\n  );\n  useEffect(() => {\n    Caman(canvasRef.current, imageUrl, function (this: any) {\n      camanCallback.call(this);\n    });\n  }, []);\n  return <canvas ref={canvasRef} />;\n};\n\nexport default CamanCanvas;\n","import React, { useEffect, useContext, useCallback } from \"react\";\nimport CamanCanvas from \"./CamanCanvas\";\nimport { TableRow, TableCell, Input } from \"@material-ui/core\";\nimport { ScreenshotContext } from \"./ProcessedScreenshot\";\nimport { DataStoreContext } from \"./DataStore\";\n\nconst OcrRow: React.FC<{\n  imageUrl: string;\n  camanCallback: () => void;\n  parsed: string;\n  progress: number;\n  field: string;\n}> = (props) => {\n  const { imageUrl, camanCallback, parsed, field } = props;\n\n  return (\n    <TableRow>\n      <TableCell>\n        <CamanCanvas imageUrl={imageUrl} camanCallback={camanCallback} />\n      </TableCell>\n      <TableCell>\n        <ConnectedInput field={field} parsed={parsed} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst ConnectedInput: React.FC<{ field: string; parsed: string }> = (props) => {\n  const { parsed, field } = props;\n  const { data, updateData } = useContext(DataStoreContext);\n  const screenshot = useContext(ScreenshotContext);\n  useEffect(() => updateData(screenshot.id, field, parsed), [parsed]);\n  const value = data && data[screenshot.id] && data[screenshot.id][field];\n  const updateHandler = useCallback(\n    (e) => updateData(screenshot.id, field, e.target.value),\n    [screenshot.id, field]\n  );\n  return <MemoizedInput value={value} onChange={updateHandler} />;\n};\n\nconst MemoizedInput = React.memo(Input);\n\n// const MemoizedInput = React.memo((props: any) => {\n//   console.log(\"OcrRow render\");\n//   return <Input {...props as any} />;\n// });\n\nexport default OcrRow;\n","import { createScheduler, createWorker } from \"tesseract.js\";\n\nconst scheduler = createScheduler();\nconst init = Promise.all(\n  Array(2)\n    .fill(0)\n    .map(async () => {\n      const worker = createWorker({ logger: console.log });\n      await worker.load();\n      await worker.loadLanguage(\"eng\");\n      await worker.initialize(\"eng\");\n      scheduler.addWorker(worker);\n    })\n);\n\nconst ocr = async (\n  imageUrl: string,\n  progressCallback?: (progress: number) => void\n) => {\n  await init;\n  const {\n    data: { text },\n  } = await scheduler.addJob(\"recognize\", imageUrl);\n  console.log(text);\n  return text;\n};\n\nexport default ocr;\n","import { useState } from \"react\";\nimport ocr from \"./logic/ocr\";\n\nexport function useCaman(processingCallback: () => void) {\n  const [parsed, setParsed] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const camanCallback = function (this: any) {\n    processingCallback.call(this);\n    const self = this;\n    this.render(function () {\n      const canvas: HTMLCanvasElement = self.canvas;\n      canvas.toBlob(async (blob) => {\n        const imageUrl = URL.createObjectURL(blob);\n        const result = await ocr(imageUrl, setProgress);\n        setParsed(result);\n      });\n    });\n  };\n  return { parsed, progress, camanCallback };\n}\n","export const clusterNamesById: Record<string, string> = {\n  \"Tharcal Fissure\": \"4206\",\n  \"Cairn Darg\": \"4209\",\n  \"Gwan Gorge\": \"4210\",\n  \"Malag Crevasse\": \"4215\",\n  \"Creag Morr\": \"4216\",\n  \"Cairn Camain\": \"4213\",\n  \"Cairn Glascore\": \"4212\",\n  \"Pen Gent\": \"4207\",\n  \"Pen Garn\": \"4201\",\n  \"Crose Gorge\": \"4203\",\n  \"Birken Fell\": \"3201\",\n  \"Eldon Hill\": \"3204\",\n  \"Lewsdon Hill\": \"3203\",\n  \"Blackthorn Quarry\": \"3207\",\n  Haytor: \"3206\",\n  \"Brent Knoll\": \"3209\",\n  \"Mase Knoll\": \"3210\",\n  \"Croker Hill\": \"3212\",\n  \"Goffers Knoll\": \"3215\",\n  \"Vixen Tor\": \"3213\",\n  \"Prospector's Hope\": \"2215\",\n  \"Steelhide Meadow\": \"2213\",\n  \"Longmarch Meadow\": \"2212\",\n  \"Lazygrass Plain\": \"2209\",\n  \"Snapshaft Trough\": \"2210\",\n  \"Drywater Meadow\": \"2207\",\n  \"Parchthroat Plain\": \"2206\",\n  \"Deadvein Gully\": \"2204\",\n  \"Roastcorpse Steppe\": \"2203\",\n  \"Kindlegrass Steppe\": \"2201\",\n  Ferndell: \"1215\",\n  \"Wyre Forest\": \"1213\",\n  Stagbourne: \"1212\",\n  Murkweald: \"1210\",\n  \"Longtimber Glen\": \"1209\",\n  Birchcopse: \"1207\",\n  \"Willow Wood\": \"1206\",\n  Oakcopse: \"1204\",\n  Rowanwood: \"1203\",\n  Larchroad: \"1201\",\n  \"Pen Kerrig\": \"4204\",\n  Slimehag: \"0214\",\n  \"Bonepool Marsh\": \"0212\",\n  \"Spectral Sump\": \"0211\",\n  \"Willowsigh Marsh\": \"0203\",\n  \"Stumprot Swamp\": \"0208\",\n  \"Dusklight Fen\": \"0206\",\n  \"Dewleaf Fen\": \"0209\",\n  Stinkhag: \"0205\",\n  Chillhag: \"0202\",\n  \"Slowtree Plain\": \"2208\",\n  \"Smoothfloor Cleft\": \"2211\",\n  \"Gutras Hill\": \"3205\",\n  Mardale: \"3202\",\n  \"Wispwhisper Marsh\": \"0210\",\n  \"Curlew Fen\": \"0213\",\n  \"Saddle Tor\": \"3211\",\n  \"Windripple Fen\": \"0204\",\n  \"Mawar Gorge\": \"4208\",\n  Russerdell: \"1202\",\n  \"Bryn Gorge\": \"4202\",\n  \"Cairn Gorm\": \"4205\",\n  \"Bowscale Fell\": \"3208\",\n  \"Cairn Fidair\": \"4214\",\n  \"Creag Garr\": \"4211\",\n  \"Nightcreak Marsh\": \"0207\",\n  \"Fractured Ground\": \"2214\",\n  \"Cracked Earth\": \"2202\",\n  Redlake: \"1208\",\n  \"Yew Wood\": \"1211\",\n  \"Highbole Glen\": \"1205\",\n  \"Hornbeam Wood\": \"1214\",\n  \"Haldon Tor\": \"3214\",\n  \"Sleetwater Basin\": \"0201\",\n  Camlann: \"0005\",\n  Astolat: \"2009\",\n  \"Runnel Sink\": \"3245\",\n  \"Inis Mon\": \"1007\",\n  Cedarcopse: \"1246\",\n  \"Bellever Tor\": \"3249\",\n  \"Pen Uchaf\": \"4249\",\n  \"Shiftshadow Expanse\": \"2205\",\n  \"Northstrand Dunes\": \"2305\",\n  \"Northstrand Beach\": \"2326\",\n  \"Scuttlesink Mouth\": \"0324\",\n  \"Deepwood Dell\": \"1306\",\n  \"Whitebank Portal North\": \"4302\",\n  \"Whitebank Portal South\": \"4303\",\n  \"Whitebank Portal East\": \"4304\",\n  \"Whitebank Stream\": \"4308\",\n  \"Whitebank Shore\": \"4309\",\n  \"Whitebank Cross\": \"4311\",\n  \"Whitebank Wall\": \"4326\",\n  \"Meltwater Bog\": \"0307\",\n  \"Whitebank Descent\": \"4305\",\n  \"Whitebank Ridge\": \"4338\",\n  \"Timberslope Dell\": \"1326\",\n  \"Deepwood Pines\": \"1340\",\n  \"Frostpeak Vista\": \"4306\",\n  \"Frostpeak Ascent\": \"4324\",\n  \"Floatshoal Fissure\": \"4327\",\n  \"Floatshoal Bight\": \"4339\",\n  \"Meltwater Delta\": \"0325\",\n  \"Meltwater Sump\": \"0338\",\n  \"Skysand Plateau\": \"2307\",\n  \"Everwinter Crossing\": \"4307\",\n  \"Everwinter Plain\": \"4323\",\n  \"Everwinter Gorge\": \"4325\",\n  \"Scuttlesink Marsh\": \"0353\",\n  \"Brambleshore Hinterlands\": \"1305\",\n  \"Shaleheath Steep\": \"3338\",\n  \"Everwinter Reach\": \"4321\",\n  \"Everwinter Peak\": \"4322\",\n  \"Everwinter Passage\": \"4337\",\n  \"Everwinter Expanse\": \"4340\",\n  \"Everwinter Incline\": \"4353\",\n  \"Scuttlesink Pools\": \"0306\",\n  \"Timbertop Dale\": \"1325\",\n  \"Timbertop Wood\": \"1338\",\n  \"Timbertop Escarp\": \"1353\",\n  \"Shaleheath Hills\": \"3326\",\n  \"Everwinter Shores\": \"4310\",\n  \"Wetgrave Bog\": \"0305\",\n  \"Wetgrave Swale\": \"0339\",\n  \"Wetgrave Marsh\": \"0342\",\n  \"Timberslope Grove\": \"1339\",\n  \"Timberslope Bridge\": \"1354\",\n  \"Swiftsands Plain\": \"2306\",\n  \"Drybasin Riverbed\": \"2308\",\n  \"Swiftsands Basin\": \"2339\",\n  \"Swiftsands Chaparral\": \"2354\",\n  \"Skylake Bridge\": \"3327\",\n  \"Greenshore Bay\": \"1355\",\n  \"Flatrock Cliffs\": \"3305\",\n  \"Skullmarsh Lower\": \"0315\",\n  \"Skullmarsh Upper\": \"0343\",\n  \"Greenshore Peninsula\": \"1307\",\n  \"Giantweald Dale\": \"1308\",\n  \"Watchwood Precipice\": \"1311\",\n  \"Watchwood Grove\": \"1315\",\n  \"Giantweald Woods\": \"1328\",\n  \"Watchwood Lakeside\": \"1329\",\n  \"Watchwood Bluffs\": \"1330\",\n  \"Giantweald Edge\": \"1341\",\n  \"Slakesands Canyon\": \"2309\",\n  \"Drybasin Oasis\": \"2341\",\n  \"Slakesands Mesa\": \"2342\",\n  \"Flatrock Plateau\": \"3328\",\n  \"Munten Rise\": \"4315\",\n  \"Munten Tundra\": \"4331\",\n  \"Munten Fell\": \"4345\",\n  \"Hightree Portal East\": \"1302\",\n  \"Hightree Portal North\": \"1303\",\n  \"Hightree Portal West\": \"1304\",\n  \"Hightree Steep\": \"1313\",\n  \"Hightree Lake\": \"1316\",\n  \"Hightree Dale\": \"1317\",\n  \"Hightree Strand\": \"1319\",\n  \"Hightree Glade\": \"1320\",\n  \"Hightree Enclave\": \"1322\",\n  \"Hightree Pass\": \"1332\",\n  \"Hightree Levee\": \"1335\",\n  \"Hightree Cliffs\": \"1336\",\n  \"Hightree Isle\": \"1345\",\n  \"Hightree Hillock\": \"1347\",\n  \"Glacierbreak Summit\": \"4332\",\n  \"Widemoor Portal North\": \"0302\",\n  \"Widemoor Portal South\": \"0303\",\n  \"Widemoor Portal West\": \"0304\",\n  \"Drownfield Course\": \"0308\",\n  \"Widemoor Shore\": \"0309\",\n  \"Widemoor Pool\": \"0312\",\n  \"Willowshade Wetlands\": \"0314\",\n  \"Widemoor Estuary\": \"0316\",\n  \"Widemoor Hills\": \"0327\",\n  \"Drownfield Wetland\": \"0328\",\n  \"Widemoor End\": \"0330\",\n  \"Willowshade Pools\": \"0331\",\n  \"Widemoor Woods\": \"0333\",\n  \"Willowshade Hills\": \"0344\",\n  \"Timberscar Dell\": \"1309\",\n  \"Timberscar Copse\": \"1342\",\n  \"Drytop Riverbed\": \"2327\",\n  \"Drytop Pillars\": \"2328\",\n  \"Drownfield Mire\": \"0310\",\n  \"Drownfield Fen\": \"0313\",\n  \"Drownfield Slough\": \"0329\",\n  \"Drownfield Rut\": \"0332\",\n  \"Drownfield Quag\": \"0340\",\n  \"Meltwater Channel\": \"0354\",\n  \"Drownfield Sink\": \"0355\",\n  \"Deadpine Forest\": \"1312\",\n  \"Skysand Ridge\": \"2340\",\n  \"Citadel of Ash \": \"2355\",\n  \"Glacierfall Passage\": \"4312\",\n  \"Whitepeak Ascent\": \"4317\",\n  \"Glacierfall Canyon\": \"4329\",\n  \"Everwinter Gap\": \"4341\",\n  \"Glacierfall Cross\": \"4343\",\n  \"Glacierfall Valley\": \"4344\",\n  \"Whitepeak Spring\": \"4348\",\n  \"Glacierfall Pass\": \"4355\",\n  \"Whitepeak Tundra\": \"4357\",\n  \"Springsump Basin\": \"0321\",\n  \"Springsump Wetland\": \"0335\",\n  \"Springsump Melt\": \"0351\",\n  \"Southgrove Escarp\": \"1314\",\n  \"Southgrove Copse\": \"1337\",\n  \"Southgrove Thicket\": \"1350\",\n  \"Dryvein Cross\": \"2315\",\n  \"Sunstrand Shoal\": \"2316\",\n  \"Sunstrand Delta\": \"2317\",\n  \"Dryvein Plain\": \"2319\",\n  \"Farshore Esker\": \"2320\",\n  \"Dryvein Oasis\": \"2334\",\n  \"Sunstrand Dunes\": \"2335\",\n  \"Farshore Heath\": \"2336\",\n  \"Sunstrand Quicksands\": \"2348\",\n  \"Battlebrae Peaks\": \"3317\",\n  \"Stonelake Fields\": \"3325\",\n  \"Stonelake Hillock\": \"3336\",\n  \"Stonemouth Southbluff\": \"3358\",\n  \"Frostspring Passage\": \"4336\",\n  \"Frostspring Vulcano\": \"4351\",\n  \"Whitewall Ridge\": \"4352\",\n  \"Whitewall Pass\": \"4359\",\n  \"Runnelvein Slough\": \"0311\",\n  \"Runnelvein Bog\": \"0326\",\n  \"Runnelvein Sink\": \"0341\",\n  \"Giantweald Copse\": \"1310\",\n  \"Deepwood Gorge\": \"1327\",\n  \"Giantweald Roots\": \"1331\",\n  \"Deepwood Copse\": \"1343\",\n  \"Giantweald Glade\": \"1344\",\n  \"Eye of the Forest \": \"1356\",\n  \"Eldersleep \": \"1357\",\n  \"Skylake Hinterlands\": \"3339\",\n  \"Thunderrock Draw\": \"3353\",\n  \"Floatshoal Floe\": \"4313\",\n  \"Iceburn Firth\": \"4318\",\n  \"Flammog Fork\": \"4319\",\n  \"Iceburn Peaks\": \"4328\",\n  \"Flammog Valley\": \"4330\",\n  \"Iceburn Cliffs\": \"4342\",\n  \"Iceburn Tundra\": \"4346\",\n  \"Flammog Desolation\": \"4354\",\n  \"Glacierfall Fissure\": \"4356\",\n  \"Widemoor Delta\": \"0317\",\n  \"Willowshade Mire\": \"0318\",\n  \"Willowshade Lake\": \"0319\",\n  \"Willowshade Icemarsh\": \"0320\",\n  \"Widemoor Flats\": \"0334\",\n  \"Willowshade Sink\": \"0345\",\n  \"Widemoor Fen\": \"0348\",\n  \"Twinchannel Narrows\": \"0350\",\n  \"Unhallowed Cloister \": \"0357\",\n  \"Westweald Thicket\": \"1323\",\n  \"Driftwood Glen\": \"1334\",\n  \"Westweald Shore\": \"1351\",\n  \"Sandrift Portal West\": \"2302\",\n  \"Sandrift Portal North\": \"2303\",\n  \"Sandrift Portal East\": \"2304\",\n  \"Sandmount Strand\": \"2312\",\n  \"Bleachskull Steppe\": \"2314\",\n  \"Sandmount Esker\": \"2318\",\n  \"Sandrift Steppe\": \"2321\",\n  \"Sandrift Prairie\": \"2322\",\n  \"Sandrift Coast\": \"2323\",\n  \"Sandrift Shore\": \"2324\",\n  \"Farshore Bay\": \"2325\",\n  \"Bleachskull Desert\": \"2333\",\n  \"Sandrift Expanse\": \"2337\",\n  \"Farshore Lagoon\": \"2338\",\n  \"Sandmount Desert\": \"2349\",\n  \"Sandrift Dunes\": \"2350\",\n  \"Farshore Drylands\": \"2351\",\n  \"Sandrift Fringe\": \"2352\",\n  \"Farshore Cape\": \"2353\",\n  \"Sandmount Ascent\": \"2358\",\n  \"Windgrass Portal West\": \"3302\",\n  \"Windgrass Portal North\": \"3303\",\n  \"Windgrass Portal South\": \"3304\",\n  \"Braemore Upland\": \"3309\",\n  \"Windgrass Border\": \"3318\",\n  \"Windgrass Gully\": \"3320\",\n  \"Windgrass Rill\": \"3321\",\n  \"Windgrass Precipice\": \"3322\",\n  \"Braemore Lowland\": \"3331\",\n  \"Windgrass Fields\": \"3333\",\n  \"Windgrass Coast\": \"3334\",\n  \"Highstone Mound\": \"3346\",\n  \"Avalanche Ravine\": \"4314\",\n  \"Frostbite Chasm\": \"4316\",\n  \"Frostseep Ravine\": \"4320\",\n  \"Frostbite Mountain\": \"4335\",\n  \"Frostseep Crevasse\": \"4347\",\n  \"Longfen Marsh\": \"0322\",\n  \"Mudfoot Sump\": \"0323\",\n  \"Mudfoot Mounds\": \"0337\",\n  \"Longfen Veins\": \"0352\",\n  \"Deathreach Priory \": \"0359\",\n  \"Greenhollow Vale\": \"1324\",\n  \"Greenhollow Copse\": \"1352\",\n  \"Highstone Plains\": \"3315\",\n  \"Battlebrae Flatland\": \"3316\",\n  \"Highstone Grassland\": \"3319\",\n  \"Gravemound Brim\": \"3323\",\n  \"Gravemound Hills\": \"3324\",\n  \"Gravemound Slope\": \"3337\",\n  \"Battlebrae Meadow\": \"3349\",\n  \"Windgrass Terrace\": \"3350\",\n  \"Gravemound Knoll\": \"3351\",\n  \"Gravemound Cliffs\": \"3352\",\n  \"Highstone Loch\": \"3357\",\n  \"Redtree Enclave\": \"3359\",\n  \"Deathwisp Sink\": \"0346\",\n  \"Deathwisp Bog\": \"0347\",\n  \"Sunkenbough Woods\": \"0349\",\n  \"Black Monastery \": \"0356\",\n  \"Sunkenbough Spring\": \"0358\",\n  \"Rivercopse Crossing\": \"1318\",\n  \"Driftwood Vale\": \"1321\",\n  \"Hightree Borderlands\": \"1333\",\n  \"Rivercopse Curve\": \"1346\",\n  \"Driftwood Hollow\": \"1348\",\n  \"Rivercopse Path\": \"1349\",\n  \"Darkbough Snag\": \"1358\",\n  \"Rivercopse Fount\": \"1359\",\n  \"Sunfang Ravine\": \"2310\",\n  \"Sunfang Approach\": \"2330\",\n  \"Parchsand Cliffs\": \"2331\",\n  \"Sunfang Cliffs\": \"2343\",\n  \"Sunfang Wasteland\": \"2344\",\n  \"Wailing Bulwark \": \"2356\",\n  \"Sunfang Dawn\": \"2357\",\n  \"Parchsand Drought\": \"2359\",\n  \"Murdergulch Cross\": \"3306\",\n  \"Murdergulch Gap\": \"3307\",\n  \"Razorrock Passage\": \"3308\",\n  \"Razorrock Valley\": \"3310\",\n  \"Highstone Meadow\": \"3311\",\n  \"Battlebrae Plain\": \"3312\",\n  \"Battlebrae Lake\": \"3313\",\n  \"Stonemouth Northbluff\": \"3314\",\n  \"Thunderrock Rapids\": \"3329\",\n  \"Razorrock Ravine\": \"3330\",\n  \"Razorrock Edge\": \"3332\",\n  \"Stonemouth Bay\": \"3335\",\n  \"Thunderrock Ascent\": \"3340\",\n  \"Thunderrock Upland\": \"3341\",\n  \"Murdergulch Trail\": \"3342\",\n  \"Razorrock Chasm\": \"3343\",\n  \"Razorrock Verge\": \"3344\",\n  \"Razorrock Bank\": \"3345\",\n  \"Highstone Plateau\": \"3347\",\n  \"Battlebrae Grassland\": \"3348\",\n  \"Murdergulch Divide\": \"3354\",\n  \"Murdergulch Ravine\": \"3355\",\n  \"Razorrock Gulch\": \"3356\",\n  \"Firesink Caldera\": \"4333\",\n  \"Whitecliff Peak\": \"4334\",\n  \"Firesink Trench\": \"4349\",\n  \"Whitecliff Expanse\": \"4350\",\n  \"Avalanche Incline\": \"4358\",\n  \"Longfen Arms\": \"0336\",\n  \"Thirstwater Steppe\": \"2311\",\n  \"Dryvein Riverbed\": \"2313\",\n  \"Thirstwater Waste\": \"2329\",\n  \"Dryvein Steppe\": \"2332\",\n  \"Dryvein End\": \"2345\",\n  \"Thirstwater Gully\": \"2346\",\n  \"Dryvein Confluence\": \"2347\",\n  \"Daemonium Keep \": \"2360\",\n  ResourceDebug: \"ResourceDebug\",\n  \"Ouyos-Aoeuam\": \"TNL-001\",\n  \"Coues-Exakrom\": \"TNL-002\",\n  \"Puros-Amayam\": \"TNL-003\",\n  \"Pures-Ouozlum\": \"TNL-004\",\n  \"Soros-Axaesum\": \"TNL-005\",\n  \"Huyos-Uxeulum\": \"TNL-006\",\n  \"Ceres-Iooinum\": \"TNL-007\",\n  \"Cetos-Obaelos\": \"TNL-008\",\n  \"Oieos-Umiutum\": \"TNL-009\",\n  \"Sebos-Avoirom\": \"TNL-010\",\n  \"Teros-Auiusum\": \"TNL-011\",\n  \"Oebos-Ixakaum\": \"TNL-012\",\n  \"Touos-Uoemtum\": \"TNL-013\",\n  \"Xasos-Aeoilos\": \"TNL-014\",\n  \"Xuros-Eyoztum\": \"TNL-015\",\n  \"Pasos-Avosam\": \"TNL-016\",\n  \"Oasos-Uromlum\": \"TNL-017\",\n  \"Casos-Uruxtum\": \"TNL-018\",\n  \"Ceros-Aeaylum\": \"TNL-019\",\n  \"Xouos-Aioblos\": \"TNL-020\",\n  \"Oasos-Eraerom\": \"TNL-021\",\n  \"Tetos-Igaelum\": \"TNL-022\",\n  \"Hynos-Oiaelos\": \"TNL-023\",\n  \"Hebos-Ulamsum\": \"TNL-024\",\n  \"Hiros-Iuaerom\": \"TNL-025\",\n  \"Cynos-Avixnum\": \"TNL-026\",\n  \"Conos-Avaelum\": \"TNL-027\",\n  \"Tetos-Ulaurom\": \"TNL-028\",\n  \"Oures-Araosum\": \"TNL-029\",\n  \"Hures-Ugumtum\": \"TNL-030\",\n  \"Hasos-Iuimaum\": \"TNL-031\",\n  \"Foros-Egoisum\": \"TNL-032\",\n  \"Hasos-Agoitum\": \"TNL-033\",\n  \"Setos-Avamsum\": \"TNL-034\",\n  \"Tonos-Obayam\": \"TNL-035\",\n  \"Honos-Umayaum\": \"TNL-036\",\n  \"Huyes-Ogozlum\": \"TNL-037\",\n  \"Curos-Avulsum\": \"TNL-038\",\n  \"Cebos-Avemlum\": \"TNL-039\",\n  \"Hasos-Inayaum\": \"TNL-040\",\n  \"Sasos-Egeylos\": \"TNL-041\",\n  \"Coros-Aiayrom\": \"TNL-042\",\n  \"Hiros-Exozlos\": \"TNL-043\",\n  \"Tiros-Ouultum\": \"TNL-044\",\n  \"Cases-Ugumlos\": \"TNL-045\",\n  \"Fynes-Unavtum\": \"TNL-046\",\n  \"Fetos-Aiaylos\": \"TNL-047\",\n  \"Fouos-Agosaum\": \"TNL-048\",\n  \"Huyos-Eyoztum\": \"TNL-049\",\n  \"Poues-Unatam\": \"TNL-050\",\n  \"Fouos-Amaurom\": \"TNL-051\",\n  \"Suyos-Onaytum\": \"TNL-052\",\n  \"Xasos-Oneulum\": \"TNL-053\",\n  \"Oynos-Oyozam\": \"TNL-054\",\n  \"Coros-Atinaum\": \"TNL-055\",\n  \"Sasos-Oiozlum\": \"TNL-056\",\n  \"Xynos-Oyogam\": \"TNL-057\",\n  \"Cynos-Oxaeaum\": \"TNL-058\",\n  \"Tynos-Atatlos\": \"TNL-059\",\n  \"Firos-Enomaum\": \"TNL-060\",\n  \"Hynes-Exemrom\": \"TNL-061\",\n  \"Hebes-Ouaylos\": \"TNL-062\",\n  \"Foues-Aeaosum\": \"TNL-063\",\n  \"Xilos-Osayam\": \"TNL-064\",\n  \"Casos-Ayosrom\": \"TNL-065\",\n  \"Souos-Ososlos\": \"TNL-066\",\n  \"Xebos-Emimsum\": \"TNL-067\",\n  \"Oetos-Oyexlos\": \"TNL-068\",\n  \"Xebos-Exostum\": \"TNL-069\",\n  \"Tynos-Eyexrom\": \"TNL-070\",\n  \"Casos-Aximam\": \"TNL-071\",\n  \"Hasos-Ayousum\": \"TNL-072\",\n  \"Fasos-Ayiotum\": \"TNL-073\",\n  \"Pebos-Avosrom\": \"TNL-074\",\n  \"Sases-Avuotum\": \"TNL-075\",\n  \"Xases-Oxoulum\": \"TNL-076\",\n  \"Hieos-Avaolum\": \"TNL-077\",\n  \"Xasos-Aoemaum\": \"TNL-078\",\n  \"Hasos-Osuorom\": \"TNL-079\",\n  \"Oynos-Eramtum\": \"TNL-080\",\n  \"Couos-Ayayaum\": \"TNL-081\",\n  \"Siros-Obobrom\": \"TNL-082\",\n  \"Souos-Umogaum\": \"TNL-083\",\n  \"Cilos-Avioaum\": \"TNL-084\",\n  \"Fonos-Aiugsum\": \"TNL-085\",\n  \"Synos-Ayailos\": \"TNL-086\",\n  \"Xiles-Aiavlum\": \"TNL-087\",\n  \"Sases-Aoarsum\": \"TNL-088\",\n  \"Casos-Aiagsum\": \"TNL-089\",\n  \"Tieos-Ayoslum\": \"TNL-090\",\n  \"Hieos-Aiigaum\": \"TNL-091\",\n  \"Poros-Aiayrom\": \"TNL-092\",\n  \"Cilos-Ofailos\": \"TNL-093\",\n  \"Silos-Apenlum\": \"TNL-094\",\n  \"Fynos-Alodrom\": \"TNL-095\",\n  \"Firos-Ezatam\": \"TNL-096\",\n  \"Firos-Osinsum\": \"TNL-097\",\n  \"Soues-Uzurtum\": \"TNL-098\",\n  \"Ooros-Ataltum\": \"TNL-099\",\n  \"Hynes-Ieatun\": \"TNL-100\",\n  \"Fuyes-Izohun\": \"TNL-101\",\n  \"Xetos-Obursum\": \"TNL-102\",\n  \"Oetos-Ofailos\": \"TNL-103\",\n  \"Tynos-Igurlum\": \"TNL-104\",\n  \"Puros-Ofavam\": \"TNL-105\",\n  \"Setos-Aiaitum\": \"TNL-106\",\n  \"Tynos-Uxavrom\": \"TNL-107\",\n  \"Souos-Availos\": \"TNL-108\",\n  \"Sebos-Ugersum\": \"TNL-109\",\n  \"Peros-Aiataum\": \"TNL-110\",\n  \"Pieos-Ofairom\": \"TNL-111\",\n  \"Sieos-Ofugtum\": \"TNL-112\",\n  \"Tasos-Iriglos\": \"TNL-113\",\n  \"Tiros-Odoxlum\": \"TNL-114\",\n  \"Xases-Ataglos\": \"TNL-115\",\n  \"Oires-Oloblum\": \"TNL-116\",\n  \"Firos-Aiavam\": \"TNL-117\",\n  \"Heros-Atoyam\": \"TNL-118\",\n  \"Petos-Aietam\": \"TNL-119\",\n  \"Touos-Ataglos\": \"TNL-120\",\n  \"Poros-Oconun\": \"TNL-121\",\n  \"Honos-Oyezam\": \"TNL-122\",\n  \"Fieos-Atezsum\": \"TNL-123\",\n  \"Ooros-Ecunsum\": \"TNL-124\",\n  \"Coros-Alieam\": \"TNL-125\",\n  \"Couos-Opodam\": \"TNL-126\",\n  \"Horos-Ohenlum\": \"TNL-127\",\n  \"Files-Azazsum\": \"TNL-128\",\n  \"Sasos-Abizaum\": \"TNL-129\",\n  \"Fones-Opavun\": \"TNL-130\",\n  \"Fiees-Ohohtum\": \"TNL-131\",\n  \"Siros-Ofurlos\": \"TNL-132\",\n  \"Oiros-Alaiam\": \"TNL-133\",\n  \"Xiros-Aiairom\": \"TNL-134\",\n  \"Silos-Oyarlum\": \"TNL-135\",\n  \"Fonos-Oleraum\": \"TNL-136\",\n  \"Fieos-Aiuttum\": \"TNL-137\",\n  \"Filos-Abalam\": \"TNL-138\",\n  \"Synos-Oyarlos\": \"TNL-139\",\n  \"Febos-Acalun\": \"TNL-140\",\n  \"Pieos-Eterrom\": \"TNL-141\",\n  \"Feros-Oyuctum\": \"TNL-142\",\n  \"Pynos-Opabrom\": \"TNL-143\",\n  \"Foros-Uzazlum\": \"TNL-144\",\n  \"Cieos-Atatlum\": \"TNL-145\",\n  \"Huros-Atontum\": \"TNL-146\",\n  \"Tonos-Aboysum\": \"TNL-147\",\n  \"Hiles-Izizaum\": \"TNL-148\",\n  \"Sebos-Oyohun\": \"TNL-149\",\n  \"Cilos-Otatrom\": \"TNL-150\",\n  \"Oasitos-Aoeuam\": \"TNL-201\",\n  \"Curites-Exakrom\": \"TNL-202\",\n  \"Petitos-Amayam\": \"TNL-203\",\n  \"Pynites-Ouozlum\": \"TNL-204\",\n  \"Suyitos-Axaesum\": \"TNL-205\",\n  \"Honitos-Uxeulum\": \"TNL-206\",\n  \"Cuyites-Iooinum\": \"TNL-207\",\n  \"Cieitos-Obaelos\": \"TNL-208\",\n  \"Oonitos-Umiutum\": \"TNL-209\",\n  \"Siritos-Avoirom\": \"TNL-210\",\n  \"Tuyitos-Auiusum\": \"TNL-211\",\n  \"Oieitos-Ixakaum\": \"TNL-212\",\n  \"Turitos-Uoemtum\": \"TNL-213\",\n  \"Xouitos-Aeoilos\": \"TNL-214\",\n  \"Xouitos-Eyoztum\": \"TNL-215\",\n  \"Peritos-Avosam\": \"TNL-216\",\n  \"Oynitos-Uromlum\": \"TNL-217\",\n  \"Conitos-Uruxtum\": \"TNL-218\",\n  \"Cebitos-Aeaylum\": \"TNL-219\",\n  \"Xuyitos-Aioblos\": \"TNL-220\",\n  \"Oebitos-Eraerom\": \"TNL-221\",\n  \"Tebitos-Igaelum\": \"TNL-222\",\n  \"Huritos-Oiaelos\": \"TNL-223\",\n  \"Hynitos-Ulamsum\": \"TNL-224\",\n  \"Hetitos-Iuaerom\": \"TNL-225\",\n  \"Cetitos-Avixnum\": \"TNL-226\",\n  \"Casitos-Avaelum\": \"TNL-227\",\n  \"Tasitos-Ulaurom\": \"TNL-228\",\n  \"Oynites-Araosum\": \"TNL-229\",\n  \"Hilites-Ugumtum\": \"TNL-230\",\n  \"Huritos-Iuimaum\": \"TNL-231\",\n  \"Fynitos-Egoisum\": \"TNL-232\",\n  \"Huyitos-Agoitum\": \"TNL-233\",\n  \"Soritos-Avamsum\": \"TNL-234\",\n  \"Tasitos-Obayam\": \"TNL-235\",\n  \"Hasitos-Umayaum\": \"TNL-236\",\n  \"Hynites-Ogozlum\": \"TNL-237\",\n  \"Ceritos-Avulsum\": \"TNL-238\",\n  \"Coritos-Avemlum\": \"TNL-239\",\n  \"Heritos-Inayaum\": \"TNL-240\",\n  \"Seritos-Egeylos\": \"TNL-241\",\n  \"Cetitos-Aiayrom\": \"TNL-242\",\n  \"Heritos-Exozlos\": \"TNL-243\",\n  \"Tieitos-Ouultum\": \"TNL-244\",\n  \"Cieites-Ugumlos\": \"TNL-245\",\n  \"Fieites-Unavtum\": \"TNL-246\",\n  \"Foritos-Aiaylos\": \"TNL-247\",\n  \"Fynitos-Agosaum\": \"TNL-248\",\n  \"Heritos-Eyoztum\": \"TNL-249\",\n  \"Pirites-Unatam\": \"TNL-250\",\n  \"Fonitos-Amaurom\": \"TNL-251\",\n  \"Seritos-Onaytum\": \"TNL-252\",\n  \"Xetitos-Oneulum\": \"TNL-253\",\n  \"Oebitos-Oyozam\": \"TNL-254\",\n  \"Casitos-Atinaum\": \"TNL-255\",\n  \"Souitos-Oiozlum\": \"TNL-256\",\n  \"Xebitos-Oyogam\": \"TNL-257\",\n  \"Conitos-Oxaeaum\": \"TNL-258\",\n  \"Turitos-Atatlos\": \"TNL-259\",\n  \"Feritos-Enomaum\": \"TNL-260\",\n  \"Hebites-Exemrom\": \"TNL-261\",\n  \"Hurites-Ouaylos\": \"TNL-262\",\n  \"Fynites-Aeaosum\": \"TNL-263\",\n  \"Xoritos-Osayam\": \"TNL-264\",\n  \"Cieitos-Ayosrom\": \"TNL-265\",\n  \"Synitos-Ososlos\": \"TNL-266\",\n  \"Xetitos-Emimsum\": \"TNL-267\",\n  \"Oeritos-Oyexlos\": \"TNL-268\",\n  \"Xoritos-Exostum\": \"TNL-269\",\n  \"Tieitos-Eyexrom\": \"TNL-270\",\n  \"Cetitos-Aximam\": \"TNL-271\",\n  \"Hynitos-Ayousum\": \"TNL-272\",\n  \"Fuyitos-Ayiotum\": \"TNL-273\",\n  \"Petitos-Avosrom\": \"TNL-274\",\n  \"Suyites-Avuotum\": \"TNL-275\",\n  \"Xerites-Oxoulum\": \"TNL-276\",\n  \"Hasitos-Avaolum\": \"TNL-277\",\n  \"Xilitos-Aoemaum\": \"TNL-278\",\n  \"Hilitos-Osuorom\": \"TNL-279\",\n  \"Oiritos-Eramtum\": \"TNL-280\",\n  \"Curitos-Ayayaum\": \"TNL-281\",\n  \"Setitos-Obobrom\": \"TNL-282\",\n  \"Sasitos-Umogaum\": \"TNL-283\",\n  \"Cieitos-Avioaum\": \"TNL-284\",\n  \"Fynitos-Aiugsum\": \"TNL-285\",\n  \"Sonitos-Ayailos\": \"TNL-286\",\n  \"Xonites-Aiavlum\": \"TNL-287\",\n  \"Synites-Aoarsum\": \"TNL-288\",\n  \"Cynitos-Aiagsum\": \"TNL-289\",\n  \"Tetitos-Ayoslum\": \"TNL-290\",\n  \"Hilitos-Aiigaum\": \"TNL-291\",\n  \"Ponitos-Aiayrom\": \"TNL-292\",\n  \"Conitos-Ofailos\": \"TNL-293\",\n  \"Soritos-Apenlum\": \"TNL-294\",\n  \"Firitos-Alodrom\": \"TNL-295\",\n  \"Fynitos-Ezatam\": \"TNL-296\",\n  \"Feritos-Osinsum\": \"TNL-297\",\n  \"Suyites-Uzurtum\": \"TNL-298\",\n  \"Ouritos-Ataltum\": \"TNL-299\",\n  \"Hurites-Ieatun\": \"TNL-300\",\n  \"Filites-Izohun\": \"TNL-301\",\n  \"Xynitos-Obursum\": \"TNL-302\",\n  \"Ouritos-Ofailos\": \"TNL-303\",\n  \"Tonitos-Igurlum\": \"TNL-304\",\n  \"Piritos-Ofavam\": \"TNL-305\",\n  \"Soritos-Aiaitum\": \"TNL-306\",\n  \"Tonitos-Uxavrom\": \"TNL-307\",\n  \"Synitos-Availos\": \"TNL-308\",\n  \"Sasitos-Ugersum\": \"TNL-309\",\n  \"Puyitos-Aiataum\": \"TNL-310\",\n  \"Pouitos-Ofairom\": \"TNL-311\",\n  \"Suyitos-Ofugtum\": \"TNL-312\",\n  \"Toritos-Iriglos\": \"TNL-313\",\n  \"Tebitos-Odoxlum\": \"TNL-314\",\n  \"Xurites-Ataglos\": \"TNL-315\",\n  \"Oynites-Oloblum\": \"TNL-316\",\n  \"Furitos-Aiavam\": \"TNL-317\",\n  \"Hynitos-Atoyam\": \"TNL-318\",\n  \"Pynitos-Aietam\": \"TNL-319\",\n  \"Tilitos-Ataglos\": \"TNL-320\",\n  \"Peritos-Oconun\": \"TNL-321\",\n  \"Hynitos-Oyezam\": \"TNL-322\",\n  \"Fasitos-Atezsum\": \"TNL-323\",\n  \"Oeritos-Ecunsum\": \"TNL-324\",\n  \"Casitos-Alieam\": \"TNL-325\",\n  \"Cilitos-Opodam\": \"TNL-326\",\n  \"Huyitos-Ohenlum\": \"TNL-327\",\n  \"Fasites-Azazsum\": \"TNL-328\",\n  \"Silitos-Abizaum\": \"TNL-329\",\n  \"Febites-Opavun\": \"TNL-330\",\n  \"Ferites-Ohohtum\": \"TNL-331\",\n  \"Synitos-Ofurlos\": \"TNL-332\",\n  \"Oouitos-Alaiam\": \"TNL-333\",\n  \"Xoritos-Aiairom\": \"TNL-334\",\n  \"Sasitos-Oyarlum\": \"TNL-335\",\n  \"Fasitos-Oleraum\": \"TNL-336\",\n  \"Fouitos-Aiuttum\": \"TNL-337\",\n  \"Fynitos-Abalam\": \"TNL-338\",\n  \"Suyitos-Oyarlos\": \"TNL-339\",\n  \"Fuyitos-Acalun\": \"TNL-340\",\n  \"Pilitos-Eterrom\": \"TNL-341\",\n  \"Fasitos-Oyuctum\": \"TNL-342\",\n  \"Piritos-Opabrom\": \"TNL-343\",\n  \"Filitos-Uzazlum\": \"TNL-344\",\n  \"Cynitos-Atatlum\": \"TNL-345\",\n  \"Hebitos-Atontum\": \"TNL-346\",\n  \"Tuyitos-Aboysum\": \"TNL-347\",\n  \"Honites-Izizaum\": \"TNL-348\",\n  \"Siritos-Oyohun\": \"TNL-349\",\n  \"Cieitos-Otatrom\": \"TNL-350\",\n  \"Quaent-Vynsum\": \"TNL-151\",\n  \"Quaent-Al-Vynsum\": \"TNL-351\",\n  \"Quaent-Tersis\": \"TNL-152\",\n  \"Quaent-Al-Tersis\": \"TNL-352\",\n  \"Quaent-Viesom\": \"TNL-153\",\n  \"Quaent-Al-Viesom\": \"TNL-353\",\n  \"Quatun-Nusas\": \"TNL-154\",\n  \"Quatun-Et-Nusas\": \"TNL-354\",\n  \"Quaent-Qintis\": \"TNL-155\",\n  \"Quaent-Al-Qintis\": \"TNL-355\",\n  \"Quatun-Odetum\": \"TNL-156\",\n  \"Quatun-Et-Odetum\": \"TNL-356\",\n  \"Quaent-Al-Odesum\": \"TNL-157\",\n  \"Quaent-In-Odesum\": \"TNL-357\",\n  \"Quaent-Al-Nusis\": \"TNL-158\",\n  \"Quaent-In-Nusis\": \"TNL-358\",\n  \"Qiient-Tersom\": \"TNL-159\",\n  \"Qiient-In-Tersom\": \"TNL-359\",\n  \"Qiient-Odesas\": \"TNL-160\",\n  \"Qiient-Qi-Odesas\": \"TNL-360\",\n  \"Qiient-Nutis\": \"TNL-161\",\n  \"Qiient-In-Nutis\": \"TNL-361\",\n  \"Qiient-Vyntum\": \"TNL-162\",\n  \"Qiient-In-Vyntum\": \"TNL-362\",\n  \"Qiient-Al-Odesum\": \"TNL-163\",\n  \"Qiient-Si-Odesum\": \"TNL-363\",\n  \"Qiient-Al-Vynsis\": \"TNL-164\",\n  \"Qiient-Qi-Vynsis\": \"TNL-364\",\n  \"Qiitun-Et-Vynsom\": \"TNL-165\",\n  \"Qiitun-Si-Vynsom\": \"TNL-365\",\n  \"Qiient-Al-Tersas\": \"TNL-166\",\n  \"Qiient-Qi-Tersas\": \"TNL-366\",\n  \"Qiitun-Vietis\": \"TNL-167\",\n  \"Qiitun-Et-Vietis\": \"TNL-367\",\n  \"Qiient-Et-Tertum\": \"TNL-168\",\n  \"Qiient-Si-Tertum\": \"TNL-368\",\n  \"Qiient-Qinsum\": \"TNL-169\",\n  \"Qiient-Et-Qinsum\": \"TNL-369\",\n  \"Qiient-Al-Viesis\": \"TNL-170\",\n  \"Qiient-In-Viesis\": \"TNL-370\",\n  \"Qiient-Al-Nusom\": \"TNL-171\",\n  \"Qiient-Qi-Nusom\": \"TNL-371\",\n  \"Qiient-Et-Nusas\": \"TNL-172\",\n  \"Qiient-Si-Nusas\": \"TNL-372\",\n  \"Qiient-Et-Odetis\": \"TNL-173\",\n  \"Qiient-Sa-Odetis\": \"TNL-373\",\n  \"Qiient-In-Odetum\": \"TNL-174\",\n  \"Qiient-Oc-Odetum\": \"TNL-374\",\n  \"Qiitun-Duosum\": \"TNL-175\",\n  \"Qiitun-Al-Duosum\": \"TNL-375\",\n  \"Qiient-Al-Qinsis\": \"TNL-176\",\n  \"Qiient-In-Qinsis\": \"TNL-376\",\n  \"Secent-Odesom\": \"TNL-177\",\n  \"Secent-Qi-Odesom\": \"TNL-377\",\n  \"Sectun-Tersas\": \"TNL-178\",\n  \"Sectun-Et-Tersas\": \"TNL-378\",\n  \"Secent-Al-Odetis\": \"TNL-179\",\n  \"Secent-Si-Odetis\": \"TNL-379\",\n  \"Secent-Vyntum\": \"TNL-180\",\n  \"Secent-Et-Vyntum\": \"TNL-380\",\n  \"Secent-Viesum\": \"TNL-181\",\n  \"Secent-Al-Viesum\": \"TNL-381\",\n  \"Secent-Et-Odesis\": \"TNL-182\",\n  \"Secent-Sa-Odesis\": \"TNL-382\",\n  \"Sectun-Qinsom\": \"TNL-183\",\n  \"Sectun-In-Qinsom\": \"TNL-383\",\n  \"Secent-Al-Qinsom\": \"TNL-184\",\n  \"Secent-Qi-Qinsom\": \"TNL-384\",\n  \"Sectun-Al-Vyntis\": \"TNL-185\",\n  \"Sectun-In-Vyntis\": \"TNL-385\",\n  \"Secent-Nutum\": \"TNL-186\",\n  \"Secent-Al-Nutum\": \"TNL-386\",\n  \"Secent-Al-Tersum\": \"TNL-187\",\n  \"Secent-In-Tersum\": \"TNL-387\",\n  \"Sectun-In-Odesis\": \"TNL-188\",\n  \"Sectun-Oc-Odesis\": \"TNL-388\",\n  \"Secent-Duosom\": \"TNL-189\",\n  \"Secent-Al-Duosom\": \"TNL-389\",\n  \"Secent-Et-Qinsas\": \"TNL-190\",\n  \"Secent-Si-Qinsas\": \"TNL-390\",\n  \"Setent-Vietis\": \"TNL-191\",\n  \"Setent-Al-Vietis\": \"TNL-391\",\n  \"Settun-Odetum\": \"TNL-192\",\n  \"Settun-Et-Odetum\": \"TNL-392\",\n  \"Setent-Nusum\": \"TNL-193\",\n  \"Setent-Et-Nusum\": \"TNL-393\",\n  \"Settun-Vynsis\": \"TNL-194\",\n  \"Settun-Al-Vynsis\": \"TNL-394\",\n  \"Settun-Tersom\": \"TNL-195\",\n  \"Settun-Al-Tersom\": \"TNL-395\",\n  \"Setent-Duosas\": \"TNL-196\",\n  \"Setent-Al-Duosas\": \"TNL-396\",\n  \"Setent-Qintis\": \"TNL-197\",\n  \"Setent-Et-Qintis\": \"TNL-397\",\n  \"Settun-Al-Odetum\": \"TNL-198\",\n  \"Settun-In-Odetum\": \"TNL-398\",\n  \"Setent-Al-Qinsum\": \"TNL-199\",\n  \"Setent-In-Qinsum\": \"TNL-399\",\n  \"Settun-Al-Nusis\": \"TNL-200\",\n  \"Settun-In-Nusis\": \"TNL-400\",\n};\n\nconst clusters = Object.keys(clusterNamesById);\nexport default clusters;\n","import {findBestMatch} from \"string-similarity\";\nimport clusters from \"./clusters\";\n\nconst bestCluster = (raw: string) => {\n    if (!raw) return raw;\n    const res = findBestMatch(raw, clusters);\n    return res.bestMatch.target;\n}\n\nexport default bestCluster","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\nimport bestCluster from \"../logic/bestCluster\";\n\nconst ProcessedCluster: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(167, 25, 1668, 1035);\n    this.greyscale();\n    this.threshold(128);\n  });\n  const postProcessed = React.useMemo(() => bestCluster(parsed), [parsed]);\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={postProcessed}\n      progress={progress}\n      field=\"from\"\n    />\n  );\n};\n\nexport default ProcessedCluster;\n","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\n\nconst postProcess = (raw: string) => {\n  const x = raw.replace(/\\s/g, \"\");\n  const res = x.match(/(\\d\\d:\\d\\d)/);\n  if (!res) return \"\";\n  return res[1];\n};\n\nconst ProcessedTime: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(54, 25, 1836, 1035);\n    this.greyscale();\n    this.threshold(128);\n  });\n  const postProcessed = React.useMemo(() => postProcess(parsed), [parsed]);\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={postProcessed}\n      progress={progress}\n      field=\"currentTime\"\n    />\n  );\n};\n\nexport default ProcessedTime;\n","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\nimport bestCluster from \"../logic/bestCluster\";\n\nconst ProcessedDestination: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(286, 29, 61, 23);\n    this.invert();\n    this.greyscale();\n    this.threshold(128);\n  });\n  const postProcessed = React.useMemo(() => bestCluster(parsed), [parsed]);\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={postProcessed}\n      progress={progress}\n      field=\"to\"\n    />\n  );\n};\n\nexport default ProcessedDestination;\n","import React from \"react\";\nimport OcrRow from \"./OcrRow\";\nimport { useCaman } from \"../hooks\";\n\nconst postProcess = (raw: string) => {\n  const x = raw.toLowerCase().replace(/\\s/g, \"\");\n  const res = x.match(\n    /closesin((?:[0-2]?[0-9]h[0-5][0-9]m)|(?:[0-5]?[0-9]m[0-5][0-9][s8§]))/\n  );\n  if (!res) return \"\";\n  let value = res[1];\n  if (value[value.length - 1] !== \"m\") {\n    value = value.substr(0, value.length - 1) + \"s\";\n  }\n  return value;\n};\n\nconst ProcessedRemainingTime: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const { camanCallback, parsed, progress } = useCaman(function (this: any) {\n    this.crop(155, 20, 200, 83);\n    // this.gamma(0.8)\n    // this.selectByColor(\n    //   [\n    //     [255, 255, 255],\n    //     [255, 78, 57],\n    //   ],\n    //   128\n    // );\n    this.invert();\n  });\n  const postProcessed = React.useMemo(() => postProcess(parsed), [parsed]);\n  return (\n    <OcrRow\n      imageUrl={imageUrl}\n      camanCallback={camanCallback}\n      parsed={postProcessed}\n      progress={progress}\n      field=\"remainingTime\"\n    />\n  );\n};\n\nexport default ProcessedRemainingTime;\n","import React, { useContext, useCallback } from \"react\";\nimport {\n  TableRow,\n  TableCell,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport CamanCanvas from \"./CamanCanvas\";\nimport { ScreenshotContext } from \"./ProcessedScreenshot\";\nimport { DataStoreContext } from \"./DataStore\";\n\nconst field = \"size\";\n\nconst PortalSize: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const camanCallback = function (this: any) {\n    this.crop(55, 55);\n    const self = this;\n    this.render(function () {\n      const canvas: HTMLCanvasElement = self.canvas;\n      const ctx = canvas.getContext(\"2d\")!;\n      const imageData = ctx.getImageData(34, 22, 1, 1);\n      const [r, g, b] = Array.from(imageData.data);\n      if (r > 160) {\n        updateValue(\"RAID\");\n      } else if (g > 160) {\n        updateValue(\"SOLO\");\n      } else if (b > 160) {\n        updateValue(\"GROUP\");\n      }\n    });\n  };\n\n  const screenshot = useContext(ScreenshotContext);\n  const { updateData, data } = useContext(DataStoreContext);\n  const updateValue = useCallback(\n    (value) => updateData(screenshot.id, field, value),\n    [screenshot.id, field, updateData]\n  );\n  const updateHandler = useCallback((e) => updateValue(e.target.value), [\n    updateValue,\n  ]);\n  return (\n    <TableRow>\n      <TableCell>\n        <CamanCanvas imageUrl={imageUrl} camanCallback={camanCallback} />\n      </TableCell>\n      <TableCell>\n        <RadioGroup\n          row\n          value={\n            (data && data[screenshot.id] && data[screenshot.id][field]) ||\n            \"MISSING\"\n          }\n          onChange={updateHandler}\n        >\n          <FormControlLabel value=\"SOLO\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"GROUP\" control={<Radio />} label=\"7\" />\n          <FormControlLabel value=\"RAID\" control={<Radio />} label=\"20\" />\n        </RadioGroup>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default PortalSize;\n","import React, { useCallback, useState } from \"react\";\nimport CamanCanvas from \"./CamanCanvas\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport ProcessedDestination from \"./ProcessedDestination\";\nimport ProcessedRemainingTime from \"./ProcessedRemainingTime\";\nimport PortalSize from \"./PortalSize\";\n\nconst PortalPopup: React.FC<{ imageUrl: string }> = (props) => {\n  const { imageUrl } = props;\n  const [popupObjectUrl, setPopupObjectUrl] = useState(\"\");\n  const camanCallback = useCallback(function (this: any) {\n    const self = this;\n    self.cropPortalPopup();\n    self.render(function () {\n      (self.canvas as HTMLCanvasElement).toBlob((blob) => {\n        setPopupObjectUrl(URL.createObjectURL(blob));\n      });\n    });\n  }, []);\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <CamanCanvas imageUrl={imageUrl} camanCallback={camanCallback} />\n        </TableCell>\n        <TableCell></TableCell>\n      </TableRow>\n      {popupObjectUrl && (\n        <>\n          <ProcessedDestination imageUrl={popupObjectUrl} />\n          <ProcessedRemainingTime imageUrl={popupObjectUrl} />\n          <PortalSize imageUrl={popupObjectUrl} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PortalPopup;\n","import React from \"react\";\nimport ProcessedCluster from \"./ProcessedCluster\";\nimport { Table, TableHead, TableCell, TableBody } from \"@material-ui/core\";\nimport ProcessedTime from \"./ProcessedTime\";\nimport PortalPopup from \"./PortalPopup\";\n\nexport const ScreenshotContext = React.createContext({} as any);\n\nconst ProcessedScreenshot: React.FC<{ screenshot: any }> = (props) => {\n  const { screenshot } = props;\n  const imageUrl = URL.createObjectURL(screenshot.image);\n  return (\n    <ScreenshotContext.Provider value={screenshot}>\n      <Table>\n        <TableHead>\n          <TableCell>Image</TableCell>\n          <TableCell>Parsed</TableCell>\n        </TableHead>\n        <TableBody>\n          <PortalPopup imageUrl={imageUrl} />\n          <ProcessedCluster imageUrl={imageUrl} />\n          <ProcessedTime imageUrl={imageUrl} />\n        </TableBody>\n      </Table>\n    </ScreenshotContext.Provider>\n  );\n};\n\nexport default ProcessedScreenshot;\n","import React, { useContext } from \"react\";\nimport { List, ListItem, Typography } from \"@material-ui/core\";\nimport { ScreenshotStoreContext } from \"./ScreenshotStore\";\nimport ProcessedScreenshot from \"./ProcessedScreenshot\";\n\nconst ProcessedScreenshotList: React.FC = (props) => {\n  const { screenshots } = useContext(ScreenshotStoreContext);\n  return (\n    <>\n      <Typography variant=\"h4\">Review and edit results</Typography>\n      <List>\n        {screenshots.map((ss) => (\n          <ListItem key={ss.id}>\n            <ProcessedScreenshot screenshot={ss} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ProcessedScreenshotList;\n","import { clusterNamesById } from \"./clusters\";\n\nconst annotate = (\n  rawData: Array<{\n    from: string;\n    to: string;\n    currentTime: string;\n    remainingTime: string;\n  }>\n) => {\n  const currentDate = new Date();\n  return rawData.map((x) => {\n    let closingDate;\n    const observationTimeMatch = x.currentTime.match(/(\\d{2}):(\\d{2})/);\n    if (observationTimeMatch) {\n      const observationHours = parseInt(observationTimeMatch[1]);\n      const observationMinutes = parseInt(observationTimeMatch[2]);\n      const remainingTimeMatch = x.remainingTime.match(\n        /(?:(\\d{0,2})h)?(?:(\\d{1,2}m))/\n      );\n      if (remainingTimeMatch) {\n        const remainingHours = parseInt(remainingTimeMatch[1] || \"0\");\n        const remainingMinutes = parseInt(remainingTimeMatch[2]);\n        const observationDate = new Date(\n          Date.UTC(\n            currentDate.getUTCFullYear(),\n            currentDate.getUTCMonth(),\n            currentDate.getUTCDate(),\n            observationHours,\n            observationMinutes\n          )\n        );\n        if (observationDate > currentDate) {\n          observationDate.setUTCDate(observationDate.getUTCDate() - 1);\n        }\n        closingDate = new Date(observationDate);\n        closingDate.setUTCMinutes(observationMinutes + remainingMinutes);\n        closingDate.setUTCHours(\n            closingDate.getUTCHours() + remainingHours\n        );\n      }\n    }\n    return {\n      ...x,\n      fromId: clusterNamesById[x.from],\n      toId: clusterNamesById[x.to],\n      closingDate,\n    };\n  });\n};\n\nexport default annotate;\n","import React, { useContext, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport {\n  TextField,\n  Typography,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from \"@material-ui/core\";\nimport annotate from \"../logic/annotate\";\nimport { DataStoreContext } from \"./DataStore\";\n\nconst rawColumns = [\"from\", \"to\", \"currentTime\", \"remainingTime\", \"size\"];\nconst annotatedColumns = [\"from\", \"fromId\", \"to\", \"toId\", \"currentTime\", \"remainingTime\", \"closingDate\", \"size\"];\n\nconst DataBox: React.FC = () => {\n  const { data } = useContext(DataStoreContext);\n  const allData = Object.values(data);\n  const filteredData = allData.filter((x) =>\n    rawColumns.every((c) => x[c] && x[c] !== \"MISSING\")\n  );\n  const incomplete = allData.length - filteredData.length;\n  const annotatedData = annotate(filteredData);\n  const [format, setFormat] = useState(\"csv\");\n  let formatted;\n  switch (format) {\n    case \"csv\":\n      formatted = Papa.unparse(annotatedData, {\n        columns: annotatedColumns,\n      });\n      break;\n    case \"json\":\n      formatted = JSON.stringify(annotatedData, undefined, 2);\n      break;\n  }\n  return (\n    <>\n      <Typography variant=\"h4\">\n        Export your data (complete portals only)\n      </Typography>\n      <Typography>{incomplete} portal(s) require additional processing (manual annotation may be required)</Typography>\n      <RadioGroup\n        row\n        value={format}\n        onChange={(e) => setFormat(e.target.value)}\n      >\n        <FormControlLabel value=\"csv\" control={<Radio />} label=\"CSV\" />\n        <FormControlLabel value=\"json\" control={<Radio />} label=\"JSON\" />\n      </RadioGroup>\n      <TextField multiline fullWidth label=\"Data\" value={formatted} />\n    </>\n  );\n};\n\nexport default DataBox;\n","import React from \"react\";\nimport \"./App.css\";\nimport ScreenshotStore from \"./components/ScreenshotStore\";\nimport Uploader from \"./components/Uploader\";\nimport ProcessedScreenshotList from \"./components/ProcessedScreenshotList\";\nimport DataBox from \"./components/DataBox\";\nimport DataStore from \"./components/DataStore\";\n\nfunction App() {\n  return (\n    <DataStore>\n      <ScreenshotStore>\n        <Uploader />\n        <DataBox />\n        <ProcessedScreenshotList />\n      </ScreenshotStore>\n    </DataStore>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}